100 REM    CURVEFIT.BAS         SEPTEMBER 17, 1990        J. KANTELE

110 COLOR 14, 6: CLS

120 PRINT "******************************************************************"

130 PRINT

140 PRINT " PROGRAM TO FIT AN APPROXIMATION TO A SET OF N-POINT DATA VALUES"

150 PRINT " BY THE METHOD OF LEAST SQUARES. THE CODE REPRESENTS AN EXTENSION "

160 PRINT " OF A POLYNOMIAL FITTING PROCEDURE BY T.E. SHOUP [Sh83]."

170 PRINT

180 PRINT " THE RESULT IS: Y = Y(X), WHERE Y(X) IS CHOSEN TO REPRESENT ONE"

190 PRINT " OF THE SCALES: (X, Y); (LOG X, Y); (LOG X, LOG Y); (X, LOG Y)."

200 PRINT

210 PRINT " NOTE THAT IT SOMETIMES PAYS TO USE DOUBLE PRECISION, ESPECIALLY "

220 PRINT " IN LOG-LOG SCALE CALCULATIONS. (REMOVE REM FROM LINE 250.) "

230 PRINT

240 PRINT "******************************************************************"

250 REM DEFDBL A - Z

260 DIM A(20, 20), C(20), P(20), XA(20), XB(20), X(20), YA(20), YB(20), Y(20), Z(20), XQ(20), YQ(20)

270 PRINT

280 INPUT " NUMBER OF POINTS (MAX. 20) N = ", N

290 PRINT

300 PRINT " ENTER VALUES OF X1,X2,...,XN (ONE VALUE PER LINE)"

310 FOR K = 1 TO N

320 INPUT XA(K)

330 NEXT K

340 PRINT

350 PRINT " ENTER VALUES OF Y1,Y2,...,YN (ONE VALUE PER LINE)"

360 FOR K = 1 TO N

370 INPUT YA(K)

380 NEXT K

390 COLOR 14, 5: CLS : LOCATE 2, 10: PRINT "THE FOLLOWING FUNCTIONS ARE AVAILABLE FOR FITTING: "

400 LOCATE 6, 10: PRINT "1: ": LOCATE 8, 10: PRINT "2: "

410 LOCATE 10, 10: PRINT "3: ": LOCATE 12, 10: PRINT "4: "

420 T = 0: GOSUB 2460

430 LOCATE 15, 10: PRINT "HINTS:"

440 LOCATE 17, 10: PRINT " - YOU MUST HAVE X > 0 IN CASES 2. AND 3.; Y > 0 IN 3. AND 4. "

450 LOCATE 19, 10: PRINT " - FOR WIDE RANGES OF X AND Y, 3. IS RECOMMENDED. "

460 LOCATE 22, 10: PRINT "ENTER YOUR CHOICE BY NUMBER (1 TO 4): "

470 T$ = INKEY$: IF VAL(T$) < 1 OR VAL(T$) > 4 THEN 470

480 T = VAL(T$): CLS

490 ON T GOTO 500, 510, 520, 530

500 FOR K = 1 TO N: X(K) = XA(K): Y(K) = YA(K): NEXT K: GOTO 540

510 FOR K = 1 TO N: X(K) = LOG(XA(K)): Y(K) = YA(K): NEXT K: GOTO 540

520 FOR K = 1 TO N: X(K) = LOG(XA(K)): Y(K) = LOG(YA(K)): NEXT K: GOTO 540

530 FOR K = 1 TO N: X(K) = XA(K): Y(K) = LOG(YA(K)): NEXT K

540 COLOR 14, 6: CLS : PRINT : PRINT

550 INPUT " ORDER OF POLYNOMIAL (< N ) = ", OP

560 IF OP > N - 1 THEN 550

570 PRINT : FOR I = 1 TO OP + 1: C(I) = 0: NEXT I

580 LET KK = OP + 1

590 GOSUB 1040

600 MS = 0: CLS

610 LOCATE 2, 13: PRINT USING "THE FITTED FUNCTION IS, WITH POLYNOMIAL ORDER = #: "; OP

620 GOSUB 2460

630 PRINT "****************************************************************"

640 FOR I = 1 TO KK

650 PRINT " C("; I; ")= "; C(I)

660 NEXT I

670 PRINT "****************************************************************"

680 PRINT

690 PRINT " READY TO CONTINUE? (YOU CAN PRINT IT ALL LATER.) PRESS ANY KEY. "

700 PRINT : COLOR 11

710 PRINT " NOTE: HIT THREE TIMES 'ENTER' TO GET THE FINAL (BLUE) MENU."

720 IF INKEY$ = "" THEN 720

730 COLOR 14, 4: CLS : PRINT : PRINT

740 PRINT " A TEST OF THE FITTED FUNCTION WITH THE ORIGINAL INPUT VALUES:"

750 PRINT

760 PRINT "  INPUT X        INPUT Y       CALC. Y       DIFFERENCE (%) "

770 PRINT

780 FOR J = 1 TO N

790 IF T < 3 THEN GOSUB 1610 ELSE GOSUB 1760

800 PRINT USING " ##.###^^^^     ##.###^^^^    ##.###^^^^     ###.###  "; XA(J); YA(J); YB(J); P(J)

810 MS = MS + P(J) ^ 2

820 RMS = SQR(MS / N)

830 NEXT J

840 PRINT

850 PRINT USING "                              RMS DEVIATION = ##.### % "; RMS

860 PRINT

870 INPUT " DO YOU WISH TO PRINT YOUR RESULTS (1 = YES; 2 = NO)? ", P1

880 PRINT

890 PRINT " NOW YOU CAN CALCULATE Y VALUES FOR ANY INPUT X VALUES:"

900 M1 = 0: T1 = 0

910 PRINT

920 INPUT " DESIRED NUMBER OF VALUES (PRESS 'ENTER', IF NONE) = ", M1

930 IF M1 = 0 THEN 1030

940 FOR Q = 1 + T1 TO M1 + T1

950 PRINT

960 IF T < 3 THEN GOSUB 1690 ELSE GOSUB 1840

970 PRINT USING " Y = ##.###^^^^"; YQ(Q)

980 NEXT Q

990 PRINT

1000 INPUT " MORE VALUES? (1 = YES, 2 = NO)  ", M2

1010 T1 = T1 + M1

1020 IF M2 = 1 THEN 910

1030 IF P1 = 1 THEN 1920 ELSE 2290

1040 FOR L = 1 TO KK

1050 FOR M = 1 TO KK

1060 S1 = 0!: S2 = 0!

1070 FOR I = 1 TO N

1080 S1 = S1 + X(I) ^ (L - 1) * X(I) ^ (M - 1)

1090 S2 = S2 + X(I) ^ (L - 1) * Y(I)

1100 NEXT I

1110 A(L, M) = S1

1120 A(L, KK + 1) = S2

1130 NEXT M

1140 NEXT L

1150 NROW = KK: NCOL = KK + 1

1160 GOSUB 1180

1170 RETURN

1180 FOR K = 1 TO NROW

1190 PIVOT = A(K, K): IL = K

1200 FOR L = K + 1 TO NROW

1210 IF ABS(A(L, K)) < ABS(PIVOT) THEN GOTO 1240

1220 PIVOT = A(L, K)

1230 IL = L

1240 NEXT L

1250 IF IL = K THEN GOTO 1310

1260 FOR LL = 1 TO NCOL

1270 TEMP = A(K, LL)

1280 A(K, LL) = A(IL, LL)

1290 A(IL, LL) = TEMP

1300 NEXT LL

1310 NEXT K

1320 FOR J = 2 TO NCOL

1330 A(1, J) = A(1, J) / A(1, 1)

1340 NEXT J

1350 FOR L = 2 TO NROW

1360 FOR I = L TO NROW

1370 SUM = 0!

1380 FOR K = 1 TO L - 1

1390 SUM = SUM + A(I, K) * A(K, L)

1400 NEXT K

1410 A(I, L) = A(I, L) - SUM

1420 NEXT I

1430 FOR J = L + 1 TO NCOL

1440 SUM = 0!

1450 FOR K = 1 TO L - 1

1460 SUM = SUM + A(L, K) * A(K, J)

1470 NEXT K

1480 A(L, J) = (A(L, J) - SUM) / A(L, L)

1490 NEXT J

1500 NEXT L

1510 C(NROW) = A(NROW, NCOL)

1520 FOR M = 1 TO NROW - 1

1530 I = NROW - M

1540 SUM = 0

1550 FOR J = I + 1 TO NROW

1560 SUM = SUM + A(I, J) * C(J)

1570 NEXT J

1580 C(I) = A(I, NCOL) - SUM

1590 NEXT M

1600 RETURN

1610 A = 0

1620 FOR I = 1 TO KK

1630 A = A + C(I) * X(J) ^ (I - 1)

1640 NEXT I

1650 YB(J) = A

1660 Z(J) = YA(J) - YB(J)

1670 P(J) = Z(J) / YA(J) * 100

1680 RETURN

1690 INPUT " X =  ", XQ(Q)

1700 IF T = 1 THEN X(Q) = XQ(Q) ELSE X(Q) = LOG(XQ(Q))

1710 A1 = 0: FOR I = 1 TO KK

1720 A1 = A1 + C(I) * X(Q) ^ (I - 1)

1730 NEXT I

1740 YQ(Q) = A1

1750 RETURN

1760 A2 = 0

1770 FOR I = 1 TO KK

1780 A2 = A2 + C(I) * X(J) ^ (I - 1)

1790 NEXT I

1800 YB(J) = EXP(A2)

1810 Z(J) = YA(J) - YB(J)

1820 P(J) = Z(J) / YA(J) * 100

1830 RETURN

1840 INPUT " X =  ", XQ(Q)

1850 IF T = 4 THEN X(Q) = XQ(Q) ELSE X(Q) = LOG(XQ(Q))

1860 A3 = 0: FOR I = 1 TO KK

1870 A3 = A3 + C(I) * X(Q) ^ (I - 1)

1880 IF A3 > 87 THEN PRINT "OVERFLOW; PRESS 'ENTER' FOR FINAL MENU": PRINT : GOTO 1910

1890 NEXT I

1900 YQ(Q) = EXP(A3)

1910 RETURN

1920 PRINT

1930 LPRINT : LPRINT

1940 INPUT " TITLE FOR THE FITTING PROCEDURE: ", E$

1950 LPRINT TAB(4); DATE$

1960 MS = 0: LPRINT

1970 LPRINT "   TITLE: "; E$

1980 LPRINT

1990 LPRINT "   THE COEFFICIENTS ARE:"

2000 LPRINT "   ***********************"

2010 FOR I = 1 TO KK

2020 LPRINT "   C("; I; ")= "; C(I)

2030 NEXT I

2040 LPRINT "   ***********************"

2050 LPRINT

2060 LPRINT USING "   THE ORDER OF THE FITTED POLYNOMIAL IS = ## "; OP

2070 LPRINT

2080 GOSUB 2590

2090 LPRINT

2100 LPRINT "   A TEST OF THE FITTED FUNCTION WITH THE ORIGINAL INPUT VALUES:"

2110 LPRINT :

2120 LPRINT "   INPUT X         INPUT Y        CALC. Y        DIFFERENCE (%) "

2130 LPRINT

2140 FOR J = 1 TO N

2150 LPRINT USING "  ##.###^^^^      ##.###^^^^     ##.###^^^^      ###.##  "; XA(J); YA(J); YB(J); P(J)

2160 MS = MS + P(J) ^ 2

2170 NEXT J

2180 RMS = SQR(MS / N)

2190 LPRINT

2200 LPRINT USING "                                  RMS DEVIATION = ##.### % "; RMS

2210 LPRINT

2220 IF M1 = 0 THEN 2290

2230 LPRINT "   SOME GIVEN X AND CALCULATED Y VALUES:"

2240 LPRINT

2250 FOR Q = 1 TO T1

2260 LPRINT USING "   X = ##.###^^^^, Y = ##.###^^^^"; XQ(Q); YQ(Q)

2270 NEXT Q

2280 LPRINT

2290 COLOR 15, 1: CLS

2300 LOCATE 3, 10: PRINT "HOW DO YOU WISH TO CONTINUE? THE ALTERNATIVES ARE:"

2310 LOCATE 6, 10: PRINT "1: TRY ANOTHER ORDER OF POLYNOMIAL "

2320 LOCATE 7, 10: PRINT "   (KEEPING ALL OTHER THINGS UNCHANGED) "

2330 LOCATE 9, 10: PRINT "2: TRY ANOTHER TYPE OF FITTING FUNCTION "

2340 LOCATE 10, 10: PRINT "   (KEEPING THE SAME INPUT X AND Y DATA) "

2350 LOCATE 12, 10: PRINT "3: ENTER NEW Y INPUT DATA (KEEPING THE OLD X DATA)"

2360 LOCATE 14, 10: PRINT "4: RESTART THE WHOLE PROGRAM "

2370 LOCATE 16, 10: PRINT "5: QUIT "

2380 LOCATE 20, 10: PRINT "ENTER YOUR CHOICE BY NUMBER (1 TO 5): "

2390 V$ = INKEY$: IF VAL(V$) < 1 OR VAL(V$) > 5 THEN 2380

2400 V = VAL(V$)

2410 ON V GOTO 490, 390, 2420, 100, 2430

2420 COLOR 14, 6: CLS : GOTO 340

2430 COLOR 15, 1: CLS

2440 LOCATE 12, 14: PRINT "* * * *  GOOD-BYE FROM CURVEFIT.BAS PROGRAM!  * * * * "

2450 END

2460 A$ = "Y = C(1) + C(2) * X + C(3) * X^2 + ....."

2470 B$ = "Y = C(1) + C(2) * LOG(X) + C(3) * LOG(X)^2 + ..."

2480 C$ = "Y = EXP(C(1) + C(2) * LOG(X) + C(3) * LOG(X)^2 + ...)"

2490 D$ = "Y = EXP(C(1) + C(2) * X + C(3) * X^2 + ...) "

2500 IF T = 0 OR T = 1 THEN 2510 ELSE 2520

2510 LOCATE (6 - 2 * T), 13: PRINT ; A$

2520 IF T = 0 OR T = 2 THEN 2530 ELSE 2540

2530 LOCATE (8 - 2 * T), 13: PRINT ; B$

2540 IF T = 0 OR T = 3 THEN 2550 ELSE 2560

2550 LOCATE (10 - 2 * T), 13: PRINT ; C$

2560 IF T = 0 OR T = 4 THEN 2570 ELSE 2580

2570 LOCATE (12 - 2 * T), 13: PRINT ; D$

2580 RETURN

2590 IF T = 1 THEN LPRINT TAB(4); A$

2600 IF T = 2 THEN LPRINT TAB(4); B$

2610 IF T = 3 THEN LPRINT TAB(4); C$

2620 IF T = 4 THEN LPRINT TAB(4); D$

2630 RETURN



