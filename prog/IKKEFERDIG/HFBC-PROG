      PROGRAM HFBC
C BRMNL1PG
C CALLS EIGJ30 AND SAAJX,BUT NOTICE DIM-CHANGE
C BY USING I.R.S. WAVE FUNCTIONS
C MONOPOLE PAIRING
C SOLVE HFBC EQ.
C MAX(NN)=6
C
      COMMON FACLOG,RAC,IA,IB,IC,ID,IE,IF
      DIMENSION FACLOG(500)
C
      COMMON EPS,EPS4
      COMMON NPR(28),NK2(28),E(28),EIGV(20,28)
      COMMON NNST(20,16),LST(20,16),J2ST(20,16),JKMAX(16)
C
      COMMON AAJX(56,56)
      COMMON INPR(28),INK2(28),EE(28),EEIGV(20,28)
C
C
      DIMENSION A(56,56),V(56,56)
      DIMENSION USPE(56),AJX(56,56)
      DIMENSION VA(56,56),VB(56,56),TEA(56),AVA(56),AVB(56)
      DIMENSION AAJXM(56),BBJXM(56)
      DIMENSION JM1(210),JM2(210),FJM(210)
      DIMENSION NM(28),ANM(28)
      DIMENSION QPJX(56),QPJXB(28),TEB(28)
      DIMENSION IDENT(3),KVA(28)
      DIMENSION WA(8,28)
      DIMENSION WM(30),TE(30),GR(30),QP(30),GRB(30)
      REAL IW0,IW1
      CHARACTER INBUF*125
C
      IDENT(1)=4HNILS
      IDENT(2)=4HN   
      IDENT(3)=2H
      XXPAR=4H/2 -
      S=0.00000001
      PRINT 301
 301  FORMAT(/'$ Type osc. shell and a 0:')
      READ(1,*) NN,KREAD
      PRINT 310
 310  FORMAT(/'$ No. of runs,first lambda and delta-lamda(1,6.5,.001):')
      READ(1,*) NTR,RAMMIN,DELRAM
      PRINT 303
 303  FORMAT(/'$ No. of runs,first delta and delta-delta(1,.167,.001):')
      READ(1,*) NTD,DMIN,DELD
      PRINT 311
 311  FORMAT(/'$ No. of runs,first omega and delta-omega(11,0.,.0065):')
      READ(1,*) NTW,WMIN,DELW
      PRINT 305
 305  FORMAT(/'$ Moments of inertia I0 and I1 (0.,0.):')
      READ(1,*) IW0,IW1
      NDIM=NN+1
      ICC=0
      PRINT 1070
 1070 FORMAT('$  TYPE NUMBER OF NILSSON STATES:')
      READ(1,*)NTT
C
C                
      OPEN(21,FILE='CRANK:DATA',ERR=315,STATUS='OLD')
      GO TO 318
  315 WRITE(1,316)
  316 FORMAT(' Program needs CRANC:DATA, which can be copied',/,
     $' from NILSUT:DATA produced by the RPC program')
  318 CONTINUE
      OPEN(22,FILE='HFBCUT:DATA')
      READ(21,1000)INBUF
 1000 FORMAT(A125)
      READ(INBUF(1:47),1030)DUM1,I1,DUM2,DUM3,I2,DUM5
     1,DUM6,DUM7,IAMASS,DUM8,IZ
 1030 FORMAT(A3,A4,6A5,I3,A4,I3)
      IF(I1.EQ.IDENT(1)) GO TO 1001
 1002 CONTINUE
      PRINT 1003
 1003 FORMAT(' CAN NOT SEE THAT YOU HAVE CREATED CRANK:DATA?')
      STOP
 1001 CONTINUE
      WRITE(22,1004) IAMASS,IZ
 1004 FORMAT(1X,'A=',I3,' Z=',I3)
      READ(21,1000)INBUF
      READ(INBUF(1:59),1005) DUM1,DUM2,EPS,DUM3,DUM5,EPS4,I1,I2,
     1AKAR,DUM6,AMUR
 1005 FORMAT(2A5,F7.4,2A5,F7.4,A4,A3,F7.4,A4,F7.4)
      IK=0
      IF(IZ.NE.(IZ/2)*2) IK=1
      FF=2.-FLOAT(IZ)/FLOAT(IAMASS)
      IF(IK.EQ.1) FF=3.-FF
      IF(IAMASS.EQ.(IAMASS/2)*2) FF=1.5
C PUT THE SAME SCALE FACTOR FOR ODD AND EVEN CASE !!!!!
      FF=1.5
      HW=41.*IAMASS**(-0.33333333)*FF*0.666666667
      WRITE(22,1006)EPS,EPS4,AKAR,AMUR,NN,HW
 1006 FORMAT(//,1X,'EPSILON=',F6.3,' EPS4=',F6.3,' KAPPA=',
     1F7.4,' MY=',F7.4,'  OSC.QUANTUM NUMBER=',I3,'   OSC. QUANTA HW0=',
     2F7.4,'MEV')
C
C LOOKS FOR NILSSON W.F.
C
 1007 READ(21,1000)INBUF
      READ(INBUF(1:6),1008) DUM1,I1
 1008 FORMAT(A1,A4)
      IBB=IBB+1
      IF(IBB.GT.300) GO TO 1002
      IF(I1.NE.IDENT(2)) GO TO 1007
C
C READS NILSSON W.F.
C
      J=0
      IBB=0
 1009 READ(21,1000)INBUF
      READ(INBUF(1:2),1010)I1
 1010 FORMAT(A2)
      IF(I1.EQ.IDENT(3)) GO TO 1011
      IBB=IBB+1
      IF(IBB.GT.300) GO TO 1002
      READ(INBUF(1:2),1012) NX
 1012 FORMAT(I2)
      IF(NX.NE.NN) GO TO 1009
      J=J+1
      READ(INBUF(1:125),1013)DUM1,NK2(J),XPAR,DUM2,KVA(J),E(J)
     1,DCPL,(WA(I,J),I=1,NDIM)
 1013 FORMAT(A3,I2,A4,A1,I4,F9.4,F7.4,8F9.5)
      NPR(J)=1
      IF(XPAR.EQ.XXPAR) NPR(J)=-1
      GO TO 1009
 1011 NT=J
      CLOSE(21)
C
C TRANSFORM AWAY DE-SHALIT TALMI PHASIS: (-)**((N-L)/2)
C
      IF(NTT.GT.0.AND.NTT.LT.NT) NT=NTT
      DO 1040 I=1,NT
      DO 1041 J=1,NDIM
      LTST=NN-J
      IF(LTST.NE.(LTST/2)*2) LTST=LTST+1
      FASE=1.0
      LTST=LTST/2
      IF(LTST.NE.(LTST/2)*2) FASE=-1.0
      WA(J,I)=WA(J,I)*FASE
 1041 CONTINUE
 1040 CONTINUE
C
C CALCULATION OF FACLOG
      FACLOG(1)=0.0
      FACLOG(2)=0.0
      F1=1.0
      DO 18 N=3,500
      F1=F1+1.0
   18 FACLOG(N)=FACLOG(N-1)+ALOG(F1)
C
C
C
      WRITE(22,26)
   26 FORMAT(//,' NILSSON WAVE FUNCTIONS USED',/,'    LEV   ENERGY
     1 PARITY 2K  ASS  AMPLITUDES FOR J=JMAX,...,3/2,1/2 ')
      DO 1031 I=1,NT
C
C REVERSES THE W.F.
C FIRST J=JMAX. THEN J=...3/2,1/2
C
      JL=NDIM/2
      DO 1035 J=1,JL
      JJ=NDIM-J+1
      X=WA(J,I)
      Y=WA(JJ,I)
      WA(J,I)=Y
      WA(JJ,I)=X
 1035 CONTINUE
      E(I)=E(I)/HW
      WRITE(22,28) I,E(I),NPR(I),NK2(I),KVA(I),(WA(J,I),J=1,NDIM)
 1031 CONTINUE
  28  FORMAT(' ',I5,F10.4,3I5,8F9.5)
C
C
C CONSTRUCTION OF NST,LST AND J2ST AS FUNCTION OF JKPR
C
      DO 64 IPRA=1,2
      IF(IPRA-1)42,42,44
   42 IPR=1
      NMAX=6
      GO TO 46
   44 IPR=-1
      NMAX=7
   46 CONTINUE
      DO 62  K2=1,15,2
      JKPR=K2+(1-IPR)/2
      NSTX=NMAX
      LSTX=NMAX
      I=1
   50 NNST(I,JKPR)=NSTX
      LST(I,JKPR)=LSTX
      J2ST(I,JKPR)=2*LSTX+1
      J2STX=J2ST(I,JKPR)
      I=I+1
      IF(J2STX-K2) 56,56,52
   52 J2STX=2*LSTX-1
      J2ST(I,JKPR)=J2STX
      NNST(I,JKPR)=NSTX
      LST(I,JKPR)=LSTX
      I=I+1
      IF(J2STX-K2) 56,56,54
   54 LSTX=LSTX-2
      GO TO 50
   56 IF(NSTX-LSTX) 60,60,58
   58 NSTX=NSTX-2
      LSTX=NSTX
      GO TO 50
   60 CONTINUE
      JKMAX(JKPR)=I-1
   62 CONTINUE
   64 CONTINUE
C
      WRITE(22,72)
   72 FORMAT(1H1,2X,'JKMAX(I)=')
      WRITE(22,74)(JKMAX(I),I=1,16)
   74 FORMAT(1H ,5X,16I5)
      WRITE(22,76)
   76 FORMAT(1H0,2X,'JKPR=1')
      WRITE(22,78)
   78 FORMAT(1H0,2X,6(2X,'NST',2X,'LST',1X,'J2ST',5X))
      DO 82 I=1,20
      WRITE(22,80) (NNST(I,JK),LST(I,JK),J2ST(I,JK),JK=1,6)
   80 FORMAT(1H ,2X,6(3I5,5X))
   82 CONTINUE
      WRITE(22,84)
   84 FORMAT(1H1,2X,'JKPR=7')
      WRITE(22,78)
      DO 86 I=1,20
      WRITE(22,80) (NNST(I,JK),LST(I,JK),J2ST(I,JK),JK=7,12)
   86 CONTINUE
C
C FILLS WA-ARRAY INTO EIV-ARRAY. LAST ARRAY CONTAINS AMPLITUDES
C FOR ALL SHELLS .LT.NN
C
      DO 1036 I=1,28
      JK=NK2(I)+(1-NPR(I))/2
      II=0
      DO 1037 J=1,20
      IF(NN-NNST(J,JK)) 1039,1038,1039
 1038 II=II+1
      EIGV(J,I)=WA(II,I)
      GO TO 1037
 1039 EIGV(J,I)=0.0
 1037 CONTINUE
 1036 CONTINUE
C
C
      JST=0
      DO 610 I=1,NT
      KK21=NK2(I)
      JKPR1=KK21+(1-NPR(I))/2
      JKMAX1=JKMAX(JKPR1)
      DO 604 K=1,JKMAX1
      IF(ABS(EIGV(K,I))-0.01) 604,604,602
  602 IF(NNST(K,JKPR1)-NN) 604,606,604
  604 CONTINUE
      GO TO 610
  606 JST=JST+1
      INK2(JST)=KK21
      INPR(JST)=NPR(I)
      EE(JST)=E(I)
      DO 608 L=1,JKMAX1
      EEIGV(L,JST)=EIGV(L,I)
 608  CONTINUE
  610 CONTINUE
      NST=JST
      NST2=2*NST
      NST1=NST+1
      NST2M1=NST2-1
C
      CALL SAAJX(NST)
C
      DO 620 I=1,NST
      IS=NST2-I+1
      KK21=INK2(I)
      DO 618 J=1,NST
      JS=NST2-J+1
      KK22=INK2(J)
      IF(KK21-KK22) 616,612,616
  612 IF(KK21-1) 616,614,616
  614 AAJX(I,JS)=0.5*AAJX(I,J)
      AAJX(IS,J)=AAJX(I,JS)
      AAJX(I,J)=0.0
      AAJX(IS,JS)=0.0
      GO TO 618
  616 AAJX(I,J)=0.5*AAJX(I,J)
      AAJX(IS,JS)=-AAJX(I,J)
      AAJX(I,JS)=0.0
      AAJX(IS,J)=0.0
  618 CONTINUE
  620 CONTINUE
C
      DO 622 I=1,NST
      NM(I)=(-1)**((INK2(I)-1)/2)
      ANM(I)=NM(I)
  622 CONTINUE
C
      JM=0
      DO 466 I=1,NST
      MM1=INK2(I)
      I1=I+1
      IF(I1-NST) 452,452,466
  452 DO 464 J=I1,NST
      MM2=INK2(J)
      IF(ABS(AAJX(I,J))-0.0001) 456,456,454
  454 JM=JM+1
      JM1(JM)=I
      JM2(JM)=J
      FJM(JM)=AAJX(I,J)**2
      GO TO 464
  456 IF(MM1-1) 464,458,464
  458 IF(MM2-1) 464,460,464
  460 IF(ABS(AAJX(I,NST2-J+1))-0.0001) 464,464,462
  462 JM=JM+1
      JM1(JM)=I
      JM2(JM)=J
      FJM(JM)=AAJX(I,NST2-J+1)**2
  464 CONTINUE
  466 CONTINUE
      NJM=JM
      IF(NJM.GT.210) PRINT 1050,NJM
 1050 FORMAT(1X,'NJM=',I5,'GREATER THAN ARRAY LIMIT OF 210 !')
C
C
      WRITE(22,16)
   16 FORMAT(1H1, 'RESULTS FROM HARTREE-FOCK-BOGOLIUBOV-CRANKING
     1 CALCULATION')
C
C
      RAM=RAMMIN
      ITR=0
  186 ITR=ITR+1
      DO 188 I=1,NST
      USPE(I)=EE(I)-RAM
  188 CONTINUE
C
      DD=DMIN
      ITD=0
 2001 ITD=ITD+1
C
      WW=WMIN
      ITW=0
  190 ITW=ITW+1
      DO 194 I=1,NST2
      DO 192 J=1,NST2
      AJX(I,J)=WW*AAJX(I,J)
      AJX(J,I)=AJX(I,J)
  192 CONTINUE
  194 CONTINUE
C
      PRINT 2016,DD,WW,RAM
      WRITE(22,2016) DD,WW,RAM
 2016 FORMAT(///,2X,'GAP/HW0=',F6.3,10X,'OMEGA/HW0=',
     1F7.4,10X,'LAMDA/HW0=',F7.3)
C
C
      DO 204 I=1,NST2
      DO 202 J=1,NST2
      A(I,J)=0.0
  202 CONTINUE
  204 CONTINUE
C
C
      DO 216 I=1,NST
      ISS=NST2-I+1
      DO 210 J=1,NST
      JSS=NST2-J+1
      IF(I-J) 208,206,208
  206 A(I,J)=USPE(I)
  208 IFACT=NM(I)*NM(J)
      IF(IFACT) 634,210,632
  632 A(I,J)=A(I,J)-ANM(I)*AJX(I,JSS)
      GO TO 210
  634 A(I,J)=A(I,J)-AJX(I,J)
  210 CONTINUE
      DO 214 J=NST1,NST2
      JS=J-NST
      JSS=NST2-JS+1
      IF(JS-I) 213,212,213
  212 A(I,J)=-ANM(I)*DD
  213 IFACT=NM(I)*NM(JS)
  214 CONTINUE
  216 CONTINUE
      DO 228 I=NST1,NST2
      IS=I-NST
      ISS=NST2-IS+1
      DO 220 J=1,NST
      JSS=NST2-J+1
      IF(IS-J) 219,218,219
  218 A(I,J)=-ANM(IS)*DD
  219 IFACT=NM(IS)*NM(J)
  220 CONTINUE
      DO 226 J=NST1,NST2
      JS=J-NST
      JSS=NST2-JS+1
      IF(IS-JS) 224,222,224
  222 A(I,J)=-USPE(IS)
  224 IFACT=NM(IS)*NM(JS)
      IF(IFACT) 2034,226,2032
 2032 A(I,J)=A(I,J)-ANM(IS)*AJX(IS,JSS)
      GO TO 226
 2034 A(I,J)=A(I,J)+AJX(IS,JS)
  226 CONTINUE
  228 CONTINUE
C
      CALL EIGJ30(A,V,NST2,S)
      DO 234 J=1,NST2
      DO 232 I=1,NST
      IA=NST2-I+1
      VA(I,J)=0.7071068*V(I,J)
      VA(IA,J)=ANM(I)*VA(I,J)
      IB=NST+I
      VB(I,J)=0.7071068*V(IB,J)
      VB(IA,J)=-ANM(I)*VB(I,J)
  232 CONTINUE
  234 CONTINUE
C
      DO 236 I=1,NST2
      TEA(I)=A(I,I)
  236 CONTINUE
C
      DO 250 N=1,NST2M1
      MMAX=NST2-N
      DO 248 M=1,MMAX
      IF(TEA(M).LE.TEA(M+1)) GO TO 248
      ATE=TEA(M)
      DO 242 I=1,NST2
      AVA(I)=VA(I,M)
      AVB(I)=VB(I,M)
  242 CONTINUE
      TEA(M)=TEA(M+1)
      DO 244 I=1,NST2
      VA(I,M)=VA(I,M+1)
      VB(I,M)=VB(I,M+1)
  244 CONTINUE
      TEA(M+1)=ATE
      DO 246 I=1,NST2
      VA(I,M+1)=AVA(I)
      VB(I,M+1)=AVB(I)
  246 CONTINUE
  248 CONTINUE
  250 CONTINUE
C
C
      DO 268 I=1,NST2
      AAJXM(I)=0.0
      BBJXM(I)=0.0
      DO 264 K=1,NST2
      K1=K+1
      IF(K1-NST2) 255,255,264
  255 DO 262 L=K1,NST2
      IF(ABS(AAJX(K,L))-0.0001) 262,262,256
  256 FACT1=AAJX(K,L)*VA(K,I)*VA(L,I)
      FACT2=AAJX(K,L)*VB(K,I)*VB(L,I)
      AAJXM(I)=AAJXM(I)+FACT1
      BBJXM(I)=BBJXM(I)+FACT2
  262 CONTINUE
  264 CONTINUE
      AAJXM(I)=2.0*AAJXM(I)
      BBJXM(I)=2.0*BBJXM(I)
  268 CONTINUE
C
      GRJX=0.0
      DO 272 J=1,NST
      JS=J+NST
      GRJX=GRJX+BBJXM(JS)+AAJXM(J)
  272 CONTINUE
C
C
      WRITE(22,570) GRJX
  570 FORMAT(/,5X,'GRJX=',F8.4)
C
      DO 2042 I=1,NST2
 2042 QPJX(I)=AAJXM(I)-BBJXM(I)
C
      DO 2044 I=1,NST
      IS=NST-I+1
      QPJXB(I)=-QPJX(IS)
 2044 TEB(I)=-TEA(IS)
C
      WRITE(22,1060)
 1060 FORMAT(/)
      WRITE(22,2054) (TEA(I),I=NST1,NST2)
 2054 FORMAT(1H ,7X,'TEA  =',10F8.4)
      WRITE(22,2056) (QPJX(I),I=NST1,NST2)
 2056 FORMAT(1H ,7X,'QPJXA=',10F8.4)
      WRITE(22,2058) (TEB(I),I=1,NST)
 2058 FORMAT(1H ,7X,'TEB  =',10F8.4)
      WRITE(22,2060) (QPJXB(I),I=1,NST)
 2060 FORMAT(1H ,7X,'QPJXB=',10F8.4)
      ICC=ICC+1
      WM(ICC)=WW
      TE(ICC)=TEA(NST1)+TEB(1)
      GR(ICC)=GRJX
      GRB(ICC)=GRJX-AAJXM(NST)-BBJXM(NST+1)
      QP(ICC)=QPJX(NST1)+QPJXB(1)
C
      IF(ITW-NTW) 302,304,304
  302 WW=WW+DELW
      GO TO 190
  304 IF(ITR-NTR) 306,308,308
  306 RAM=RAM+DELRAM
      GO TO 186
  308 IF(ITD-NTD) 2062,2064,2064
 2062 DD=DD+DELD
      GO TO 2001
 2064 CONTINUE
      WRITE(22,1064)
 1064 FORMAT(//,' NO    W/W0   E/HW0    JXGR    JXQP  ')
      DO 1065 I=1,ICC
      WRITE(22,1066) I,WM(I),TE(I),GR(I),QP(I)
 1066 FORMAT(1X,I2,4F8.4)
 1065 CONTINUE
      ACORE=1./(2.*IW0)
      WRITE(22,1072) IW0,IW1
 1072 FORMAT(1H1,'MOMENT OF INERTIA(VMI):I=IW0+IW1(W/W0)**2
     1 ',/,' WHERE IW0=',F8.3,' AND IW1=',F8.3,' H*H/MEV')
      WRITE(22,1067) ACORE
 1067 FORMAT(' ROTATIONAL PARAMETER FOR W=0:ACORE=',F7.4,'MEV')
      WRITE(22,1061)
 1061 FORMAT(//,' NO    HW    HW2    EGR    EQP  IXGR  IGR IXQP  IQP  
     11/AGR  1/AQP')
      PRINT 1081
 1081 FORMAT(1X,'NO    HW    HW2    EGR    EQP   IGR  IQP
     1  1/AGR  1/AQP')
      DO 1062 I=1,ICC
      HWW=WM(I)*HW
      HW2=HWW*HWW
      EREF=(.5*IW0+.25*IW1*WM(I)*WM(I))*HW2
      SREF=(IW0+IW1*WM(I)*WM(I))*HWW
      EGR=EREF+GR(I)*HWW
      EQP=EGR+(TE(I)+WM(I)*QP(I))*HW
      GRI=SREF+GR(I)
      QPI=GRI+QP(I)
      GIS=.5*(SQRT(1.+4.*GRI*GRI)-1.)
      QIS=.5*(SQRT(1.+4.*QPI*QPI)-1.)
      IF(WM(I).GT.0.00001) GO TO 1068
      AGR=999.99
      AQP=999.99
      GO TO 1069
 1068 AGR=2.*GRI/(HW*WM(I))
      AQP=2.*QPI/(HW*WM(I))
 1069 CONTINUE
      WRITE(22,1063) I,HWW,HW2,EGR,EQP,GRI,GIS,QPI,QIS,AGR,AQP
 1063 FORMAT(1X,I2,4F7.3,4F5.1,2F7.2)
      PRINT 1080,I,HWW,HW2,EGR,EQP,GIS,QIS,AGR,AQP
 1080 FORMAT(1X,I2,4F7.3,2F5.1,2F7.2)
 1062 CONTINUE
      CLOSE(22)
      END



      SUBROUTINE SAAJX(NST)
C CALC OF M. ES. AAJX(I,J) BETWEEN POS.K STATES
C AAJX(I,J) IS (J+)
      COMMON FACLOG,RAC,IA,IB,IC,ID,IE,IF
      DIMENSION FACLOG(500)
C
      COMMON EPS,EPS4
      COMMON NPR(28),NK2(28),E(28),EIGV(20,28)
      COMMON NNST(20,16),LST(20,16),J2ST(20,16),JKMAX(16)
C
      COMMON AAJX(56,56)
      COMMON INPR(28),INK2(28),EE(28),EEIGV(20,28)
C
      WRITE(22,12)
   12 FORMAT(1H1,2X,9X,1HI,4X,'2*K(I)',1X,'PARITY(I)',14X,
     1'J',4X,'2*K(J)',1X,'PARITY(J)',11X,'AAJX(I,J)')
C
      FACT1=1.0-0.666666667*EPS
      FACT2=1.0+0.333333333*EPS
      FACT3=FACT2/FACT1
      FACT4=1./FACT3
      FACTAE=0.5*(SQRT(FACT3)+SQRT(FACT4))
      FACTSS=1.0-FACTAE
C
      DO 140 I=1,NST
      KK21=INK2(I)
      JKPR1=KK21+(1-INPR(I))/2
      JKMAX1=JKMAX(JKPR1)
      DO 130 J=I,NST
      AAJX(I,J)=0.0
      KK22=INK2(J)
      IF(IABS(KK21-KK22)-2) 22,22,120
  22  IF(KK21-KK22) 26,30,28
  26  J2M2=KK22
      J2M1=-KK21
      ISIG=1
      KKK=KK22
      GO TO 40
   28 J2M2=KK21
      J2M1=-KK22
      ISIG=2
      KKK=KK21
      GO TO 40
   30 IF(KK21-1) 120,32,120
   32 J2M2=1
      J2M1=1
      ISIG=3
      KKK=1
   40 CONTINUE
C
      JKPR2=KK22+(1-INPR(J))/2
      JKMAX2=JKMAX(JKPR2)
      SUM1=0.0
C
      DO 94 I3=1,JKMAX1
      IF(ISIG-2) 404,402,404
  402 N2=NNST(I3,JKPR1)
      L2=LST(I3,JKPR1)
      J22=J2ST(I3,JKPR1)
      GO TO 406
  404 CONTINUE
      N1=NNST(I3,JKPR1)
      L1=LST(I3,JKPR1)
      J21=J2ST(I3,JKPR1)
  406 CONTINUE
      DO 92 I4=1,JKMAX2
      IF(ISIG-2) 410,408,410
  408 N1=NNST(I4,JKPR2)
      L1=LST(I4,JKPR2)
      J21=J2ST(I4,JKPR2)
      GO TO 412
  410 CONTINUE
      N2=NNST(I4,JKPR2)
      L2=LST(I4,JKPR2)
      J22=J2ST(I4,JKPR2)
  412 CONTINUE
C
  422 LD=L1-L2
      IF(LD) 92,424,92
  424 FACT1=(-1.0)**(L1+(J21+1)/2)
      FACT2=J21+1
      FACT2=1.73205*SQRT(FACT2)
      IA=J21
      IB=2
      IC=J22
      IE=2
      IF=J2M2
      ID=IF-IE
      CALL CLEB
      CLEB1=RAC
      IA=1
      IB=J22
      IC=1
      ID=J21
      IE=2*L1
      IF=2
      CALL RAC7
      RAC1=RAC
      FACTJ=FACT1*FACT2*CLEB1*RAC1*FACTSS
      IF(ISIG-2) 462,462,464
  462 SIG=1.0
      GO TO 468
  464 SIG=(-1.0)**((J21+1)/2)
  468 CONTINUE
      FACTJ=FACTJ*SIG
C
      J2D=J21-J22
      IF(J2D) 450,432,450
  432 FACT1=J21*(J21+2)
      FACT1=-0.707107*SQRT(FACT1)
      FACTJ=FACTJ+FACT1*CLEB1*FACTAE*SIG
      GO TO 450
C
  450 CONTINUE
      SUM1=SUM1+FACTJ*EEIGV(I3,I)*EEIGV(I4,J)
   92 CONTINUE
   94 CONTINUE
C
      AAJX(I,J)=SUM1
      NNPR1=INPR(I)
      NNPR2=INPR(J)
      WRITE(22,102) I,KK21,NNPR1,J,KK22,NNPR2,SUM1
  102 FORMAT(1H ,2X,3I10,5X,3I10,10X,F10.4)
C
  120 AAJX(J,I)=AAJX(I,J)
  130 CONTINUE
  140 CONTINUE
C
      RETURN
      END



      SUBROUTINE EIGJ30(A,V,N,S)
      DIMENSION A(56,56),V(56,56),B(56,2)
      IND=0
      SUM=0.0
      DO 11 I=1,N
      DO 11 J=1,N
      IF(I-J) 10,11,10
   10 SUM=SUM+A(I,J)**2
   11 CONTINUE
      SUM=SQRT(SUM)
      SIGMA=N
      FNORM=SUM/SIGMA
      E=FNORM*S
      DO 22 I=1,N
      DO 22 J=1,N
      IF(I-J) 21,20,21
   21 V(I,J)=0.
      GO TO 22
   20 V(I,J)=1.0
   22 CONTINUE
  107 J=2
  108 I=1
  109 IF(ABS(A(I,J))-FNORM) 122,110,110
  110 IND=1
      R=-A(I,J)
      Q=0.5*(A(I,I)-A(J,J))
      IF(Q) 331,330,330
  330 SIGNQ=1.
      GO TO 332
  331 SIGNQ=-1.0
  332 W=SIGNQ*R/SQRT(R**2+Q**2)
      SINE=W/SQRT(2.*(1.+SQRT(1.-W**2)))
      COSE=SQRT(1.-SINE**2)
      DO 200 K=1,N
      IF(K-I) 201,200,201
  201 IF(K-J) 202,200,202
  202 B(K,1)=A(K,I)*COSE-A(K,J)*SINE
      B(K,2)=A(K,I)*SINE+A(K,J)*COSE
  200 CONTINUE
      DO 210 K=1,N
      IF(K-I) 211,210,211
  211 IF(K-J) 212,210,212
  212 A(K,I)=B(K,1)
      A(K,J)=B(K,2)
  210 CONTINUE
      DO 220 K=1,N
      B(K,1)=V(K,I)*COSE-V(K,J)*SINE
  220 B(K,2)=V(K,I)*SINE+V(K,J)*COSE
      DO 221 K=1,N
      V(K,I)=B(K,1)
  221 V(K,J)=B(K,2)
      B(1,1)=A(I,I)*COSE**2+A(J,J)*SINE**2-2.*A(I,J)*SINE*COSE
      B(2,2)=A(I,I)*SINE**2+A(J,J)*COSE**2+2.*A(I,J)*SINE*COSE
      B(2,1)=(A(I,I)-A(J,J))*SINE*COSE+A(I,J)*(COSE**2-SINE**2)
      A(I,I)=B(1,1)
      A(J,J)=B(2,2)
      A(J,I)=B(2,1)
      A(I,J)=B(2,1)
      DO 230 K=1,N
      IF(K-I) 231,230,231
  231 IF(K-J) 232,230,232
  232 A(I,K)=A(K,I)
      A(J,K)=A(K,J)
  230 CONTINUE
  122 IF(I-J+1) 123,124,123
  123 I=I+1
      GO TO 109
  124 IF(J-N) 125,126,125
  125 J=J+1
      GO TO 108
  126 IF(IND-1) 128,127,128
  127 IND=0
      GO TO 107
  128 IF(E-FNORM) 106,129,129
  106 FNORM=FNORM/SIGMA
      GO TO 107
  129 CONTINUE
      RETURN
      END



      SUBROUTINE CLEB
      COMMON FACLOG,RAC,IA,IB,IC,ID,IE,IF
      DIMENSION FACLOG(500)
      RAC=0.0
      IF(ID+IE-IF) 1000,105,1000
  105 K1=IA+IB+IC
      IF(K1-2*(K1/2)) 1000,110,1000
  110 K1=IA+IB-IC
      K2=IC-IABS(IA-IB)
      K3=MIN0(K1,K2)
      IF(K3) 1000,130,130
  130 IF((-1)**(IB+IE)) 1000,1000,140
  140 IF((-1)**(IC+IF)) 1000,1000,150
  150 IF(IA-IABS(ID)) 1000,152,152
  152 IF(IB-IABS(IE)) 1000,154,154
  154 IF(IC-IABS(IF)) 1000,160,160
  160 IF(IA) 1000,175,165
  165 IF(IB) 1000,175,170
  170 IF(IC) 1000,180,250
  175 RAC=1.0
      GO TO 1000
  180 FB=IB+1
      RAC=((-1.0)**((IA-ID)/2))/SQRT(FB)
      GO TO 1000
  250 FC2=IC+1
      IABCP=(IA+IB+IC)/2+1
      IABC=IABCP-IC
      ICAB=IABCP-IB
      IBCA=IABCP-IA
      IAPD=(IA+ID)/2+1
      IAMD=IAPD-ID
      IBPE=(IB+IE)/2+1
      IBME=IBPE-IE
      ICPF=(IC+IF)/2+1
      ICMF=ICPF-IF
      SQFCLG=0.5*(ALOG(FC2)-FACLOG(IABCP+1)
     1      +FACLOG(IABC)+FACLOG(ICAB)+FACLOG(IBCA)
     2      +FACLOG(IAPD)+FACLOG(IAMD)+FACLOG(IBPE)
     3      +FACLOG(IBME)+FACLOG(ICPF)+FACLOG(ICMF))
      NZMIC2=(IB-IC-ID)/2
      NZMIC3=(IA-IC+IE)/2
      NZMI=MAX0(0,NZMIC2,NZMIC3)+1
      NZMX=MIN0(IABC,IAMD,IBPE)
      S1=(-1.0)**(NZMI-1)
      DO 400 NZ=NZMI,NZMX
      NZM1=NZ-1
      NZT1=IABC-NZM1
      NZT2=IAMD-NZM1
      NZT3=IBPE-NZM1
      NZT4=NZ-NZMIC2
      NZT5=NZ-NZMIC3
      TERMLG=SQFCLG-FACLOG(NZ)-FACLOG(NZT1)-FACLOG(NZT2)
     1      -FACLOG(NZT3)-FACLOG(NZT4)-FACLOG(NZT5)
      SSTERM=S1*EXP(TERMLG)
      RAC=RAC+SSTERM
  400 S1=-S1
 1000 RETURN
      END




      SUBROUTINE RAC7
C
      COMMON FACLOG,RAC,IA,IB,IC,ID,IE,IF
      DIMENSION FACLOG(500)
      DIMENSION LT(6)
C
      K1=IA+IB-IE
      K3=IC+ID-IE
      K5=IA+IC-IF
      K7=IB+ID-IF
      K2=IE-IABS(IA-IB)
      K4=IE-IABS(IC-ID)
      K6=IF-IABS(IA-IC)
      K8=IF-IABS(IB-ID)
      K9=MIN0(K1,K2,K3,K4,K5,K6,K7,K8)
      RAC=0.0
      IF(K9) 4000,20,20
  20  K2=K1-2*(K1/2)
      K4=K3-2*(K3/2)
      K6=K5-2*(K5/2)
      K8=K7-2*(K7/2)
      IF(MAX0(K2,K4,K6,K8)) 4000,25,4000
   25 LTMIN=MIN0(IA,IB,IC,ID,IE,IF)
      IF(LTMIN) 4000,30,150
   30 LT(1)=IA
      LT(2)=IB
      LT(3)=IC
      LT(4)=ID
      LT(5)=IE
      LT(6)=IF
      LTMIN=LT(1)
      KMIN=1
      DO 40 N=2,6
      IF(LT(N)-LTMIN) 35,40,40
   35 LTMIN=LT(N)
      KMIN=N
   40 CONTINUE
      S1=1.0
      F1=IE
      F2=IF
      GO TO (55,55,55,55,45,50),KMIN
   45 F1=IA
      F2=IC
      S1=(-1.0)**(K5/2)
      GO TO 55
   50 F1=IA
      F2=IB
      S1=(-1.0)**(K1/2)
   55 RAC=S1/SQRT((F1+1.0)*(F2+1.0))
      GO TO 4000
  150 IABEP=(IA+IB+IE)/2+1
      ICDEP=(IC+ID+IE)/2+1
      IACFP=(IA+IC+IF)/2+1
      IBDFP=(IB+ID+IF)/2+1
      IABE=IABEP-IE
      IEAB=IABEP-IB
      IBEA=IABEP-IA
      ICDE=ICDEP-IE
      IECD=ICDEP-ID
      IDEC=ICDEP-IC
      IACF=IACFP-IF
      IFAC=IACFP-IC
      ICFA=IACFP-IA
      IBDF=IBDFP-IF
      IFBD=IBDFP-ID
      IDFB=IBDFP-IB
      NZMAX=MIN0(IABE,ICDE,IACF,IBDF)
      IABCD1=(IA+IB+IC+ID+4)/2
      IEFMAD=(IE+IF-IA-ID)/2
      IEFMBC=(IE+IF-IB-IC)/2
      NZMI1=-IEFMAD
      NZMI2=-IEFMBC
      NZMIN=MAX0(0,NZMI1,NZMI2)+1
      SQLOG=0.5*(FACLOG(IABE)+FACLOG(IEAB)+FACLOG(IBEA)+FACLOG(ICDE)
     1          +FACLOG(IECD)+FACLOG(IDEC)+FACLOG(IACF)+FACLOG(IFAC)
     2          +FACLOG(ICFA)+FACLOG(IBDF)+FACLOG(IFBD)+FACLOG(IDFB)
     3          -FACLOG(IABEP+1)-FACLOG(ICDEP+1)
     4          -FACLOG(IACFP+1)-FACLOG(IBDFP+1))
      DO 200 NZ=NZMIN,NZMAX
      NZM1=NZ-1
      K1=IABCD1-NZM1
      K2=IABE-NZM1
      K3=ICDE-NZM1
      K4=IACF-NZM1
      K5=IBDF-NZM1
      K6=NZ
      K7=IEFMAD+NZ
      K8=IEFMBC+NZ
      SSLOG=SQLOG+FACLOG(K1)-FACLOG(K2)-FACLOG(K3)-FACLOG(K4)
     1           -FACLOG(K5)-FACLOG(K6)-FACLOG(K7)-FACLOG(K8)
      SSTERM=((-1.0)**NZM1)*EXP(SSLOG)
      RAC=RAC+SSTERM
  200 CONTINUE
 4000 RETURN
      END

