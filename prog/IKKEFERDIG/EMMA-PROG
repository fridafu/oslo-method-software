      PROGRAM METOEN
      COMMON /CO1/ A(25,5,2),K(25),U(25),V(25),
     1N(25),AP(25),AN(25),NBAND
      COMMON /CO2/ JX,JBANDX,NBANDX
      COMMON /CO3/ EY,COFY(25)
      COMMON /CO4/ R0,ANN1,IBAND,AMASS,Z,AIS
      COMMON /CO5/ GS,GL,GSP,GLP,GR
      COMMON /CO6/ Q,YBR
      COMMON /CO7/ IDENT(10),ISTAT
      COMMON /CO8/ SPINI,SPINF,COFI(25),COFF(25),
     1AAI(25,5,2),AAF(25,5,2),KI(25),KF(25),
     2UI(25),UF(25),VI(25),VF(25),
     3API(25),APF(25),ANI(25),ANF(25),
     4NI(25),NF(25),NBANDI,NBANDF
     5,EI,EF,EG,JI,JF
      COMMON /CO10/ F(30)
      COMMON /CO11/ FILE(2)
      CHARACTER INBUF*132
      IDENT(1)=4H/GYR
      IDENT(2)=4H/RAD
      IDENT(3)=4HNILS
      IDENT(5)=3HREC
      IDENT(6)=4H
      IDENT(7)=4HSPIN
      IDENT(8)=4H COU
      IDENT(9)=2H ,
      IDENT(10)=4HLEVE
      FILE(1)=5HINITI
      FILE(2)=5H  FIN
C CREATES GAMMAFUNC. WITH ARRAYNUMB. =2*ARG.
      F(1)=1.772453851
      F(2)=1.0
      DO 1 I=3,29,2
      F(I)=(I-2)*F(I-2)/2.
  1   F(I+1)=(I-1)*F(I-1)/2.
      NCODE=2
      OPEN(7,FILE='MEIN:DATA',ERR=100,STATUS='OLD')
      OPEN(8,FILE='INITIAL:DATA',ERR=100,STATUS='OLD')
      OPEN(9,FILE='FINAL:DATA',ERR=100,STATUS='OLD')
      GO TO 101
 100  WRITE(1,102)
 102  FORMAT(' One of the files are missing:MEIN:DATA,INITIAL:DATA',/,
     $' or FINAL:DATA. The last files can be copied from NILSUT:DATA.')
 101  CONTINUE
      OPEN(10,FILE='MEUT:DATA')
      IBAND=0
C READS THE MEIN:DATA-FILE WITH GYRO-FACTORS AND R0 (FERMI-UNITS)
      IB=0
    2 IB=IB+1
      IF(IB.GT.2) GO TO   11
      READ(7,3)INBUF
    3 FORMAT(80A)
      READ(INBUF(1:4),4)I1
    4 FORMAT(A4)
      DO    5 JJ=1,NCODE
      IF(I1.EQ.IDENT(JJ)) GO TO    6
    5 CONTINUE
      WRITE(1,19)INBUF
   19 FORMAT(' ERROR INPUT = ',A80)
      STOP
    6 GO TO(7,8)JJ
    7 READ(INBUF(5:80),*)GS,GL,GR,GSP,GLP
      GO TO 2
    8 READ(INBUF(5:80),*)R0,ANN1,IBAND,AIS
      GO TO 2
   11 CONTINUE
      I=1
      CALL HINTR(I)
      NBANDI=NBAND
      DO   20 JJ=1,NBANDI
      KI(JJ)=K(JJ)
      API(JJ)=AP(JJ)
      ANI(JJ)=AN(JJ)
      UI(JJ)=U(JJ)
      VI(JJ)=V(JJ)
      NI(JJ)=N(JJ)
      DO   21 L=1,5
      DO   21 M=1,2
   21 AAI(JJ,L,M)=A(JJ,L,M)
   20 CONTINUE
      I=2
      CALL HINTR(I)
      NBANDF=NBAND
      DO   22 JJ=1,NBANDF
      KF(JJ)=K(JJ)
      APF(JJ)=AP(JJ)
      ANF(JJ)=AN(JJ)
      UF(JJ)=U(JJ)
      VF(JJ)=V(JJ)
      NF(JJ)=N(JJ)
      DO   23 L=1,5
      DO   23 M=1,2
   23 AAF(JJ,L,M)=A(JJ,L,M)
   22 CONTINUE
      GS=GS-GR
      GL=GL-GR
      GSP=GSP-GR
      GLP=GLP-GR
C
C  INPUT DATA FOR EACH LEVEL
 1000 CONTINUE
      DO   30 I=1,25
      COFY(I)=0.0
      COFI(I)=0.0
      COFF(I)=0.0
   30 CONTINUE
      PRINT 31
   31 FORMAT('$ TYPE SPIN*2 OF INITIAL STATE:')
      READ(1,*)JI
      PRINT 33
   33 FORMAT('$ TYPE BANDNR. OF INITIAL STATE:')
      READ(1,*)JBANDI
      PRINT 34
   34 FORMAT('$ TYPE SPIN*2 OF FINAL STATE:')
      READ (1,*) JF
      PRINT 35
   35 FORMAT('$ TYPE BANDNR. OF FINAL STATE:')
      READ(1,*)JBANDF
      PRINT 37
      IF(IH.EQ.1) GO TO   50
      WRITE(10, 36)
   36 FORMAT('1',13(' '),'RESULTS FROM ELECTROMAGNETIC TRANSITION',
     1' CALCULATION')
      WRITE(10, 37)
   37 FORMAT(//,1X,'      TRANSITION     TYPE   RATIO   ',
     1'LIFETIME  LIFETIME     RATIO    DECAY')
      PRINT 38
      WRITE(10, 38)
   38 FORMAT(1X,47(' '),'W.EST.')
      PRINT 39
      WRITE(10, 39)
   39 FORMAT(1X,'  EI    EF    JI   JF  L     B(L)      ',
     1'T(L)     TW(L)     B(L)      TT(L)')
      PRINT 40
      WRITE(10, 40)
   40 FORMAT(1X,'(KEV) (KEV)',13(' '),'(E*BARN)**2  ',
     1'(PSEC)    (PSEC)    (W.U.)    (1/SEC)')
      PRINT 41
      WRITE(10, 41)
   41 FORMAT(1X,24(' '),'(E**2)*BARN')
      PRINT 42
      WRITE(10, 42)
   42 FORMAT(1X,2('----- '),' ---  --- -- ',5(' ---------'))
   50 IH=1
      I=1
      JX=JI
      JBANDX=JBANDI
      NBANDX=NBANDI
      CALL HROTOR(I)
      IF(ISTAT.EQ.1) GO TO 60
      EI=EY
      DO   51 JJ=1,NBANDX
   51 COFI(JJ)=COFY(JJ)
      I=2
      JX=JF
      JBANDX=JBANDF
      NBANDX=NBANDF
      CALL HROTOR(I)
      IF(ISTAT.EQ.1) GO TO 60
      EF=EY
      DO   52 JJ=1,NBANDX
   52 COFF(JJ)=COFY(JJ)
C
C THE WAVEFUNCTIONS ARE READ:JI,EI,COFI(IBAND)
C AND VVS. FOR FINAL STATE
C THE CALCULATION CAN BEGIN
      EG=ABS(EI-EF)
      EG=EG*0.001
      SPINI=JI
      SPINF=JF
      SPINI=SPINI*0.5
      SPINF=SPINF*0.5
      NX=IABS(NI(1)-NF(1))
      IF(NX.EQ.1.OR.NX.EQ.3) CALL E1M2
      IF(NX.EQ.0.OR.NX.EQ.2) CALL E2M1
      CLOSE(7)
      CLOSE(8)
      CLOSE(9)
      GO TO 62
   60 PRINT 61
   61 FORMAT(' YOUR SPIN/BAND-COMBINATION DOES NOT EXIST',
     1' IN THE INPUT-FILES:INITIAL:DATA AND/OR FINAL:DATA??')
   62 CONTINUE
      PRINT 63
   63 FORMAT(/'$ DO YOU WANT A NEW CALCULATION PERFORMED?(/Y/N):')
      READ(1,64)ANSWER
   64 FORMAT(A1)
      YES=1HY
      XNO=1HN
      IF(ANSWER.EQ.XNO) GO TO   67
      IF(ANSWER.EQ.YES) GO TO   66
      PRINT                    65
   65 FORMAT('$ WHAT SORT OF ANSWER IS THAT? I ASK YOU AGAIN:')
      GO TO 62
   66 CONTINUE
      OPEN(8,FILE='INITIAL:DATA')
      OPEN(9,FILE='FINAL:DATA')
      GO TO 1000
   67 CONTINUE
      CLOSE(10)
      END
 
      FUNCTION SUMBG(SKI,SKF,SLA,NI,NF,AI,AF,GS,GL,EPS)
C  SKI=K,SKF=KF,SLA=LAMBDA,NI,NF=PRINCIPAL QUANTUM NUMBERS
C  AI,AF=NILSSON WAVE FUNCTIONS,GS,GL=GYROMAGNETIC RATIOS,EPS=-1 FOR BM1 CALC
C  =1 FOR GKK CALC..
      DIMENSION AI(5,2),AF(5,2)
      LA=SLA-1.
      SK=SKF-SKI
      IF(EPS.EQ.-1.)SK=-(SKF+SKI)
      A=SQRT(SLA*SLA-SK*SK)
      B=SQRT((SLA-SK)*(SLA-SK-1.))
      C=SQRT((SLA+SK)*(SLA+SK-1.))
      SUM1=0.
      L1=0
      LL1=NI
   20 L1=L1+1
      SLI=LL1
      L2=0
      LL2=NF
   21 L2=L2+1
      SLF=LL2
      SUM2=0.
      DO 1 NXI=1,2
      SNXI=NXI
      SNXI=SNXI-1.5
      SLAMI=SKI-SNXI
      IF(SLAMI.GT.SLI)GO TO 1
      DO 2 NXF=1,2
      SNXF=NXF
      SNXF=SNXF-1.5
      SLAMF=EPS*(SKF-SNXF)
      IF(ABS(SLAMF).GT.SLF)GO TO 1
      C1=0.
      IF(EPS*SNXF.EQ.SNXI)C1=A*(-1.)**(IFIX(SNXI-0.5))*CG(SLI,SLA-1.,
     1SLAMI,SK,SLF)
      C2=0.
      IF(SNXF.NE.EPS*(-0.5))GO TO 10
      IF(SNXI.EQ.0.5)C2=B*CG(SLI,SLA-1.,SLAMI,SK+1.,SLF)
   10 C3=0.
      IF(SNXF.NE.0.5*EPS)GO TO 11
      IF(SNXI.EQ.-0.5)C3=C*CG(SLI,SLA-1.,SLAMI,SK-1.,SLF)
   11 C4=0.
      C5=0.
      IF(EPS*SNXF.NE.SNXI)GO TO 12
      C4=(A+A)*SLAMF*CG(SLI,SLA-1.,SLAMI,SK,SLF)
      C5=B*SQRT((SLF-SLAMF)*(SLF+SLAMF+1.))*CG(SLI,SLA-1.,SLAMI,SK+1.,
     1SLF)-C*SQRT((SLF+SLAMF)*(SLF-SLAMF+1.))*CG(SLI,SLA-1.,SLAMI,
     1SK-1.,SLF)
   12 SUM2=SUM2+AI(L1,NXI)*AF(L2,NXF)*(GS*(C1+C2-C3)+(2./(SLA+1.))*GL


     1*(C4+C5))
  2   CONTINUE
  1   CONTINUE
      RAD=RADMAT(NI,LL1,NF,LL2,LA)
      SUM1=SUM1+SUM2*RAD*CG(SLI,SLA-1.,0.,0.,SLF)*SQRT((SLI+SLI+1.)
     1/(SLF+SLF+1.))
      LL2=LL2-2
      IF(LL2.GE.0)GO TO 21
      LL1=LL1-2
      IF(LL1.GE.0)GO TO 20
      SUMBG=SUM1
      RETURN
      END
 
      FUNCTION CZ(AL1,AL2,AL3)
CCGZFN      CLEBSCH-GORDAN COEFFICIENT ZERO M SUBROUTINE  **  CZ( )
C                         COMPUTES C(L1,0,L2,0,L3,0)
      IF(TR(AL1,AL2,AL3)) 1,1,4
    4 K=AL1+AL2+AL3+0.1
      IF((-1)**K) 5,1,2
    1 CONTINUE
    5 A=0.0
      GO TO 3
    2 G=(AL1+AL2+AL3)/2.0
      K=G+AL3+0.1
      A=(-1.0)**K*SQRT (2.0*AL3+1.0)* TRI(AL1,AL2,AL3)
     1 *AMN(G,G-AL1)*AMN(1.0,G-AL2)*AMN(1.0,G-AL3)
    3 CZ=A
      RETURN
             END
 
             FUNCTION CGM(AL1,AM1,AL2,AM2,AL3)
CCGMFN      CLEBSCH-GORDAN COEFFICIENT MAX M SUBROUTINE  **  CGM( )
C                         COMPUTES C(L1,M1,L2,M2,L3,L3)
      IF(AMAX1(ABS(AM1)-AL1,ABS(AM2)-AL2)-0.1)1,2,2
    2 A=0.0
      GO TO 3
    1 IF(TR(AL1,AL2,AL3))2,2,4
    4 K=AL1-AM1+0.1
      A=(-1.0)**K*SQRT (AMN(AL1+AL2-AL3,
     1AL3+AL1+AL2+1.0)*AMN(AL1+AM1,AL2-AL3+AM1)*
     2AMN(AL3+AL2-AM1,AL1-AM1 )*
     3AMN(2.0*AL3+1.0,AL3+AL1-AL2)*
     4 AMN(1.0,AL3-AL1+AL2))
    3 CGM=A
      RETURN
             END
 
      FUNCTION CG(AL6,AL7,AM6,AM7,AL8)
CCGCOEF     CLEBSCH GORDAN COEFFICIENT FUNCTION                       **  C( )
C                         CALCULATES GENERAL CLEBSCH-GORDAN COEFFICIENTS C(L1,M1,L2,M2,L3,M3)
      DIMENSION CT(51)
      AM8=AM6+AM7
      B=1.0
      AL1=AL6
      AL2=AL7
      AL3=AL8
      AM1=AM6
      AM2=AM7
      AM3=AM8
      IF(TR(AL1,AL2,AL3)) 1,1,2
    2 IF(ABS (AM3-AM1-AM2)-0.1) 4,1,1
    1 A=0.0
      GO TO 3
    4 AL = AMIN1(AL1,AL2,AL3)
      IF (AL3-AL) 6,10,6
    6 IF(AL2-AL)8,9,8
    9 K=AL1-AM1+0.1
      B=SQRT ((2.0*AL3+1.0)/(2.0*AL2+1.0))*(-1.0)**K
      AL2=AL3
      AL3=AL
      AM=AM2
      AM2=-AM3
      AM3=-AM
      GO TO 10
    8 K=AL2+AM2+0.1
      B=SQRT ((2.0*AL3+1.0)/(2.0*AL1+1.0))*(-1.0)**K
      AL1=AL3
      AL3=AL
      AM=AM1
      AM1=-AM3
      AM3=-AM
      IF(ABS (AM1) +ABS (AM2)-0.1) 5,10,10
    5 A=CZ(AL1,AL3,AL3)
      GO TO 3
   10 IF(AM3) 11,12,12
   11 K=AL1+AL2-AL3+0.1
      B=B*(-1.0)**K
      AM1=-AM1
      AM2=-AM2
      AM3=-AM3
   12 J=AL3-AM3+1.1
      IF (J) 1,1,17
   17 DO 13 I=1,J
      L=J-I+1
      AL=L
      AM5=AM1
      AM4=AM2+AL-1.0
      DO 13 LS=1,L
      IF(I-1)14,14,15
   14 CT(LS)=CGM(AL1,AM5,AL2,AM4,AL3)
      GO TO 16
   15 CT(LS)=(CT(LS)*AN(AL2,AM4+1.0)
     1 +CT(LS+1)*AN(AL1,AM5+1.0))
     2  /AN(AL3,AM5+AM4+1.0)
   16 AM5=AM5+1.0
   13 AM4=AM4-1.0
      A=CT(1)
    3 CG=A*B
      RETURN
             END
 
      FUNCTION TR(A,B,C)
CTRIREL     TRIANGLE RELATIONSHIP VERIFYING SUBROUTINE
      K=A+B+C+0.1
      IF(K)1,5,5
    5 IF(AMIN1(A+B-C,B+C-A,C+A-B)+0.1)1,2,2
    1 TR=0.0
      GO TO 4
    2 M=A+B+C+0.1
      N=A+B+C+0.6
      IF(N-M)1,3,1
    3 TR=1.0
    4 RETURN
      END
 
      FUNCTION TRI(A,B,C)
CTRIF                        TRIANGLE COEFFICIENT FUNCTION
      IF(TR(A,B,C))1,1,2
    1 T=0.0
      GO TO 6
    2 E=A+B-C
      F=A-B+C
      G=-A+B+C
      D=A+B+C
      T=SQRT (AMN(E,D+1.0)*AMN(F,1.0)*AMN(G,1.0))
    6 TRI=T
      RETURN
      END
 
      FUNCTION    AMN(AM,AN)
CFACTFN     FACTORIAL RATIO FUNCTION  **  AMN(AM,AN)
C                         COMPUTES THE RATIO FACT(AM)/FACT(AN)
      IF(AM) 100,200,200
  100 B =AM-0.1
      GO TO 201
  200 B =AM+0.1
  201 M=B
      IF(AN) 202,203,203
  202 D =AN-0.1
      GO TO 204
  203 D =AN+0.1
  204 N=D
      IF (M) 12,14,14
   14 IF (N) 12,17,17
   12 A=0.0
      GO TO 3
   17 L=N-M
      IF (L) 2,1,4
    1 A=1.0
      GO TO 3
    2 J=M
      K=N
      GO TO 5
    4 J=N
      K=M
    5 AJ=J
      A=AJ
    9 J=J-1
      IF(J-K)8,8,7
    7 AJ=AJ-1.0
      A=A*AJ
      GO TO 9
    8 IF(L) 3,1,11
   11 A=1.0/A
    3 AMN=A
      RETURN
             END
 
      FUNCTION AN (AJ,AM)
C                         COMPUTES STATISTICAL FACTOR SQRTF((J+M)*(J-M+1))
CANFN                     STATISTICAL FACTOR FUNCTION  **  AN(AJ,AM)
      A=(AJ+AM)*(AJ-AM+1.0)
      IF(A) 1,1,2
    1 A=0.0
      GO TO 3
    2 A=SQRT (A)
    3 AN=A
      RETURN
             END
 
C            GENERAL ERROR MESSAGE SUBROUTINE
      SUBROUTINE ERROR(BCD,I)
      IF(I) 1,1,2
    1        ISW = 2
             GO TO 3
    2        ISW = 1
    3        GO TO (5,4),ISW
    4        PRINT 7,BCD
    7        FORMAT(' ERROR ENCOUNTERED WHILE EXECUTING SUBROUTINE ',A6)
             GO TO 8
    5        STOP
    8        RETURN
             END

      FUNCTION SUME2(SKI,SKF,SLA,NI,NF,AI,AF,EPS)
      DIMENSION AI(5,2),AF(5,2)
      SK=EPS*(SKF-EPS*SKI)
      LA=SLA
      SUM1=0.
      L1=0
      LL1=NI
C  INITIAL L-LOOP,L1=INDEX FOR AI,LL1=ACTUAL L-VALUE
   20 L1=L1+1
      SLI=LL1
      L2=0
      LL2=NF
   21 L2=L2+1
      SLF=LL2
      SUM2=0.
C  SIGMA LOOP NXI=INDEX FOR AI,SNXI=ACTUAL SIGMA VALUE
      DO 1 NXI=1,2
      SNXI=NXI
      SNXI=SNXI-1.5
      SLAMI=SKI-SNXI
      IF(SLAMI.GT.SLI)GO TO 1
      DO 2 NXF=1,2
      SNXF=NXF
      SNXF=SNXF-1.5
      SLAMF=EPS*(SKF-SNXF)
      IF(ABS(SLAMF).GT.SLF)GO TO 1
      C1=0.
      IF(EPS*SNXF.NE.SNXI)GO TO 1
      SUM2=SUM2+AI(L1,NXI)*AF(L2,NXF)*CG(SLI,SLA,SLAMI,SK,SLF)
    2 CONTINUE
    1 CONTINUE
      SUM1=SUM1+SUM2*CG(SLI,SLA,0.,0.,SLF)*SQRT((SLI+SLI+1.)/
     1(SLF+SLF+1.0))*RADMAT(NI,LL1,NF,LL2,LA)
      LL2=LL2-2
      IF(LL2.GE.0)GO TO 21
      LL1=LL1-2
      IF(LL1.GE.0)GO TO 20
      SUME2=SUM1
      RETURN
      END

      SUBROUTINE HINTR(I)
      COMMON /CO1/ A(25,5,2),K(25),U(25),V(25),
     1N(25),AP(25),AN(25),NBAND
      COMMON /CO4/ R0,ANN1,IBAND,AMASS,Z,AIS
      COMMON /CO5/ GS,GL,GSP,GLP,GR
      COMMON /CO6/ Q,YBR
      COMMON /CO7/ IDENT(10),ISTAT
      COMMON /CO11/ FILE(2)
      DIMENSION WA(10),WWA(25,25)
      CHARACTER INBUF*132
      WRITE(10,700)FILE(I)
  700 FORMAT('1 NILSSON ORBITALS FOR ',A5,
     1'AL WAVE-FUNCTIONS')
C  READS THE W.FUCTIONS CREATED BY THE CORIOLIS PROGRAM
C PSI INITIAL ON FILE=INITIAL:DATA
C PSI FINAL ON FILE=  FINAL:DATA
      II=8
      IF(I.EQ.2) II=9
      IF(IBAND.EQ.0) IBAND=100
      ANN=0.0
      APP=0.0
      KIND=5H NEUT
      READ(II,1100)INBUF
 1100 FORMAT(A125)
 2999 FORMAT(A3,A4,6A5,I3,A4,I3)
      READ(INBUF(1:47),2999)DUM1,I1,DUM2,DUM3,I2,DUM5,DUM6,
     1DUM7,IAMASS,DUM8,IZ
      IF(I1.EQ.IDENT(3)) GO TO 2103
      PRINT 1101,FILE(I)
 1101 FORMAT(' CAN NOT SEE THAT YOU HAVE CREATED '
     1 ,A5,'AL:DATA')
      STOP
 2103 CONTINUE
      AMASS=IAMASS
      Z=IZ
      IF(I2.EQ.KIND) ANN=1.0
      APP1=SQRT(1.-ANN1*ANN1)
      APP=SQRT(1.-ANN*ANN)
      READ(II,1100)INBUF
      READ(INBUF(11:17),*)EPSI
      IB=0
 4000 READ(II,1100)INBUF
      READ(INBUF(33:35),4999)I1
 4999 FORMAT(A3)
      IB=IB+1
      IF(IB.LT.300.AND.I1.NE.IDENT(5)) GO TO 4000
      J=0
C  READS QUASI PARTICLE WAVE-FUNCTIONSC -JL
      READ(II,1100)INBUF
 5000 READ(II,1100)INBUF
      READ(INBUF(1:4),5998)IDUM
 5998 FORMAT(A4)
      IF(IDUM.EQ.IDENT(6)) GO TO 5800
      J=J+1
      READ(INBUF(1:94),5999)IDUM1,K(J),DUM2,N(J),DUM3,V(J)
     1,DUM4,DUM5,DUM6,DUM7,(WWA(J,I),I=1,8)
 5999 FORMAT(A4,I2,A5,I2,A2,E6.3,A2,2A5,A3,8E8.5)
      U(J)=SQRT(1.0-V(J)*V(J))
      AN(J)=ANN
      AP(J)=APP
      IF(J.LT.IBAND) GO TO 97
      AN(J)=ANN1
      AP(J)=APP1
   97 CONTINUE
      IF(IDUM1.EQ.IDENT(6).OR.J.GT.100) GO TO 5800
      GO TO 5000
 5800 NBAND=J
      DELTA =EPSI
      Q=(1.-(4./3.+16./27.*DELTA)*DELTA*DELTA)**(1./6.)*AMASS**(1./3.)
      Q=4.0709E-5*Q*Q
      WRITE(10,300)NBAND,AMASS,Z,R0,EPSI,GR
  300 FORMAT(//,I3,10H BANDS,A= ,F4.0,4H Z= ,F4.0,5H R0= ,F5.2,6H FERMI
     1,' EPSILON= ',F6.3,' GR= ',F6.3)
      WRITE(10,918)GS,GL
      WRITE(10,917)GSP,GLP
  917 FORMAT(' PROTON  G,S: GS=',F6.3,' GL=',F6.3)
  918 FORMAT('/NEUTRON G,S: GS=',F6.3,' GL=',F6.3)
      WRITE(10,330)((AP(J),AN(J)),J=1,NBAND)
  330 FORMAT(//,26H PROTON-NEUTRON AMPLITUDES/3(2H (,2F7.4,1H)))
      YBR=Z*AMASS**(1./3.)*DELTA*(1.-(4./3.+16./27.*DELTA)*DELTA*DELTA)
     1**(-1./6.)*(1.+2./3.*DELTA)
      YBR=0.39545*R0*R0*YBR
      Q0=SQRT(Q*16.0*3.1416/5.0)*YBR
      WRITE(10,331)Q0
      WRITE(10,337)AIS
  337 FORMAT(1X,'T=0 ISOSPIN AMPL. A=',F7.4)
  331 FORMAT(/,1X,'Q0=',E12.3,'E*BARN')
C
C TRANSFORM AWAY THE DE-SHALIT TALMI PHASIS (-)**((N-L)/2)
C
      DO 445 NB=1,NBAND
      JMAX=N(NB)+1
      DO 444 J=1,JMAX
      LTST=N(NB)-J
      IF(LTST.NE.(LTST/2)*2)LTST=LTST+1
      FASE=1.0
      LTST=LTST/2
      IF(LTST.NE.(LTST/2)*2)FASE=-1.0
      WWA(NB,J)=WWA(NB,J)*FASE
  444 CONTINUE
  445 CONTINUE
C
C TRANSFORM FROM SPHERICAL TO NILSSON BASIS
C
      DO 44 NB=1,NBAND
      DO 45 I=1,8
  45  WA(I)=WWA(NB,I)
      SUMA=0.0
      SK=K(NB)
      SK=SK*0.5
      J=1
      WRITE(10,100)NB,N(NB),K(NB),U(NB),V(NB)
  100 FORMAT(//,24H WAVE FUNCTION FOR BAND ,I2,4H N= ,I2,
     14H K= ,I2,2H/2,/,3H U=,F5.3,3H V=,F5.3,/,
     2'   L      SIGMA  C(J)    A(L,SIG)')
      NXT=2
   50 SIGMA=NXT
      SIGMA=SIGMA-1.5
      ISIGMA=2.*SIGMA
      I=0
      L=N(NB)
  51  I=I+1
      NJ=N(NB)-J+2
      AL=L
      IF(SIGMA+AL-SK)42,41,41
  41  CONTINUE
      AX=0.0
      AY=0.0
      ALAM=SK-SIGMA
      AL1=AL+0.5
      AL2=AL-0.5
      AX=WA(L+1)*CG(AL,0.5,ALAM,SIGMA,AL1)
      IF(AL2.LT.0.0.OR.L.LT.1) GO TO 56
      AY=WA(L)*CG(AL,0.5,ALAM,SIGMA,AL2)
   56 AZ=AX+AY
      A(NB,I,NXT)=AZ
      SUMA=SUMA+AZ*AZ
      WRITE(10,101)L,ISIGMA,WA(NJ),A(NB,I,NXT)
      J=J+1
  101 FORMAT(1H ,I3,I5,2H/2,2F8.4)
      GO TO 43
   42 A(NB,I,NXT)=0.
   43 L=L-2
      IF(L.GE.0)GO TO 51
      NXT=NXT-1
      IF(NXT.GE.1) GO TO 50
      WRITE(10,777) SUMA
  777 FORMAT(' NORM=',F6.4)
   44 CONTINUE
      RETURN
      END

      SUBROUTINE HROTOR(I)
      COMMON /CO2/ JX,JBANDX,NBANDX
      COMMON /CO3/ EY,COFY(25)
      COMMON /CO7/ IDENT(10),ISTAT
      CHARACTER INBUF*132
      DIMENSION N(25),COEFF(25),DUMM(25)
      II=8
      IF(I.EQ.2) II=9
      DO 10 JJ=1,25
      COEFF(JJ)=0.0
  10  COFY(JJ)=0.0
C
C STARTS TO READ THE INITIAL AND FINAL WAVEFUNCTIONS
C
      IC=0
 2510 CONTINUE
      IF(IC.EQ.1) GO TO 3333
C
C FINDS THE STRING "SPIN"
C
      READ(II,1100)INBUF

 1100 FORMAT(A125)
      READ(INBUF(2:5),2500)I1
 2500 FORMAT(A4)
      ISTAT=0
      IF(I1.NE.IDENT(10)) GO TO 7777
      ISTAT=1
      RETURN
 7777 CONTINUE
      IF(I1.NE.IDENT(7)) GO TO 2510
C
C HAVE FOUND THE STRING, CHECKS IF SPIN IS ACTUAL
C
      READ(INBUF(8:10),*)I1
      IS=I1
      IF(I1.EQ.JX) GO TO 2519
      GO TO 2510
C
C SPIN IS FOUND TO BE ACTUAL
C
 2519 READ(II,1100)INBUF
 2520 READ(II,1111)INBUF
 1111 FORMAT(A132)
C
C TEST WHAT SORT OF LINE IS READ
C
      READ(INBUF(1:2),2530)I1
 2530 FORMAT(A2)
      IF(I1.EQ.IDENT(9).AND.IC.EQ.1) GO TO 2561
      IF(I1.NE.IDENT(9).AND.IC.EQ.1) GO TO 3333
      IF(I1.EQ.IDENT(9)) GO TO 2520
      READ(INBUF(1:4),2531)I1
 2531 FORMAT(A4)
      IF(I1.EQ.IDENT(6)) GO TO 2510
      READ(INBUF(1:4),*)I1
C
C THE LINE BEGIN WITH BANDNR.,ENERGY,ETC
C TESTS IF BANDNR. IS ACTUAL
C
      IC=0
      IF(I1.NE.JBANDX.OR.IS.NE.JX) GO TO 2520
C
C  STATE IS FOUND
C
      IC=1
      GO TO 2562
 2581 EY=EE
      DO 2583 JJ=1,NBANDX
      I=N(JJ)
      IF(I.LT.1) GO TO 2586
      COFY(I)=COEFF(JJ)
 2586 COEFF(JJ)=0.0
      N(JJ)=0
 2583 CONTINUE
      GO TO 2520
C
C DECODING OF LINES
C 
 2562 READ(INBUF(1:132),2533)DUM1,EE,((DUMM(JJ),
     1N(JJ),COEFF(JJ)),JJ=1,10)
 2533 FORMAT(A4,F8.2,10(A2,I2,F8.5))
      GO TO 2581
 2561 READ(INBUF(1:120),2534)(DUMM(JJ),N(JJ),COEFF(JJ),JJ=1
     1,10)
 2534 FORMAT(10(A2,I2,F8.5))
      GO TO 2581
 3333 CONTINUE
      RETURN
      END

      SUBROUTINE E2M1
      COMMON /CO4/ R0,ANN1,IBAND,AMASS,Z,AIS
      COMMON /CO5/ GS,GL,GSP,GLP,GR
      COMMON /CO6/ Q,YBR
      COMMON /CO8/ SPINI,SPINF,COFI(25),COFF(25),
     1AAI(25,5,2),AAF(25,5,2),KI(25),KF(25),
     2UI(25),UF(25),VI(25),VF(25),
     3API(25),APF(25),ANI(25),ANF(25),
     4NI(25),NF(25),NBANDI,NBANDF
     5,EI,EF,EG,JI,JF
      DIMENSION AI(5,2),AF(5,2)
      M1TEST=0
      IF(IABS(JI-JF).LE.2)M1TEST=1
C  CALCULATE BM1 AND BE2
      SUMA=0.
      SUMB=0.
      FA=1.0
      FB=1.0
      DO 62 I=1,NBANDI
      DO 62 J=1,NBANDF
      APIJ=API(I)*APF(J)
      ANIJ=ANI(I)*ANF(J)
      GO TO 90
C ISOSPIN FOR 23NA BEGIN
      B=SQRT(1.0-AIS*AIS)
      X=0.6
      APIJ=AIS*SQRT(0.66666667)
      ANIJ=AIS*SQRT(0.16666667)+B*SQRT(0.5)
      IF(VI(I).LT.X.AND.VF(J).LT.X) GO TO 71
      IF(VI(I).GT.X.AND.VF(J).GT.X) GO TO 72
      GO TO 80
   71 APIJ=0.6666667*AIS*AIS
      ANIJ=(0.333333*AIS*AIS)+B*B
      GO TO 80
   72 APIJ=1.0
      ANIJ=0.0
   80 CONTINUE
   90 CONTINUE
C ISOSPIN FOR 23NA END
      COFIJ=COFI(I)*COFF(J)
      IF(ABS(COFIJ).LT.0.01) GO TO 62
      DO 60 L=1,5
      DO 60 M=1,2
      AI(L,M)=AAI(I,L,M)
   60 AF(L,M)=AAF(J,L,M)
      SKI=KI(I)
      SKI=SKI*0.5
      SKF=KF(J)
      SKF=SKF*0.5
      SE2=0.
      UVE2=(UI(I)*UF(J)-VI(I)*VF(J))
      IF(I.NE.J)GO TO 63
      SE2= YBR
      SLA=2.0
   63 SUMB=SUMB+COFIJ*( CG(SPINI,2.,SKI,SKF-SKI,SPINF)*
     4(UVE2*
     1SUME2(SKI,SKF,SLA,NI(I),NF(J),AI,AF,1.)+SE2)
     3+(-1.0)**(NF(J)+IFIX(
     2SPINF+2.*SKF+0.6))*SUME2(SKI,SKF,SLA,NI(I),NF(J),AI,AF,-1.)*
     5UVE2*
     3CG(SPINI,2.,SKI,-(SKF+SKI),SPINF))
      IF(M1TEST.EQ.0)GO TO 62
      IF(ABS(SKI-SKF).GT.1.)GO TO 62
      BB1=0.
      BB=0.
      BFAC=0.0
      CC1=0.0
      CC=0.0
      CC3=0.0
      UVM1=(UI(I)*UF(J)+VI(I)*VF(J))
      IF(KI(I).NE.1)GO TO 61
      IF(KF(J).NE.1) GO TO 61
      IF(APIJ.LT.0.00001) GO TO 21
      BB1=SUMBG(SKI,SKF,1.,NI(I),NF(J),AI,AF,GSP,GLP,-1.)
  21  CONTINUE
      IF(ANIJ.LT.0.00001) GO TO 20
      BB=SUMBG(SKI,SKF,1.,NI(I),NF(J),AI,AF,GS,GL,-1.)
  20  CONTINUE
      BFAC=(-1.)**(1+NF(J)+IFIX(SPINF+0.6))*CG(SPINI,1.,0.5,-1.,SPINF)
   61 CONTINUE
      IF(ANIJ.LT.0.00001) GO TO 31
      CC=SUMBG(SKI,SKF,1.,NI(I),NF(J),AI,AF,GS,GL,1.)
   31 CONTINUE
      IF(APIJ.LT.0.00001) GO TO 30
      CC1=SUMBG(SKI,SKF,1.,NI(I),NF(J),AI,AF,GSP,GLP,1.)
   30 CONTINUE
      CC3=CG(SPINI,1.,SKI,SKF-SKI,SPINF)
      SUMA=SUMA+COFIJ*((CC1*CC3+BB1*BFAC)*APIJ+
     1(CC*CC3+BB*BFAC)*ANIJ)*UVM1
   62 CONTINUE
      BM1=SUMA*SUMA*0.6598E-05
      BM1X=BM1*0.9043E+04
      IF(SUMA.LT.0.0) FA=-1.0
      TM1=1.0E10
      TTM1=BM1*15.923E+16*(EG)**3
      IF(TTM1.NE.0) TM1=1.E+12/TTM1
      TWM1=0.6582/(21.*EG**3)
      WEM1=TWM1/TM1
      BE2=SUMB*SUMB*Q
      BE2X=BE2*1.E+04
      IF(SUMB.LT.0.0)FB=-1.0
      TE2=1.0E10
      TTE2=BE2*12.279E 12*( EG  )**5
      IF(TTE2.NE.0)TE2=1.E+12/TTE2
      TWE2=0.6582/(4.9E-5*AMASS**(4./3.)*EG**5)
      WEE2=TWE2/TE2
      TTME=TTM1+TTE2
      IEI=EI
      IEF=EF
      PRINT 320,IEI,IEF,JI,JF,BE2,TE2,TWE2,WEE2,TTE2
      WRITE(10,320)IEI,IEF,JI,JF,BE2,TE2,TWE2,WEE2,TTE2,BE2X
  320 FORMAT(/,1X,I5,I6,I3,'/2',I3,'/2',' E2 ',6E10.3)
      IF(M1TEST.NE.1) GO TO 321
      PRINT 322,BM1,TM1,TWM1,WEM1,TTM1
      WRITE(10,322)BM1,TM1,TWM1,WEM1,TTM1,BM1X
  322 FORMAT(1X,22(' '),'M1 ',6E10.3)
      DELT=99.99999
      FAB=FA*FB
      IF(TE2.GT.0.0)DELT=SQRT(TM1/TE2)*(-FAB)
      IF(ABS(DELT).LT.0.00001) DELT=0.0
      PRINT 323,TTME,DELT
      WRITE(10,323)TTME,DELT
  321 CONTINUE
  323 FORMAT(1X,'TOTAL DECAY TT(E2+M1)= ',E10.3,
     1'(1/SEC)  MIXING RATIO DELTA= ',F9.5)
      RETURN
      END

      FUNCTION G(I)
C SOLVES GAMMA(I/2) FOR I=INTEGER
      COMMON /CO10/ F(30)
      G=0.0
      IF(I.GE.1.AND.I.LT.31) GO TO 10
      PRINT 11,I
   11 FORMAT(1X,'ARG.IN FUNCTION G(I) OUT OF RANGE I=',I4)
      STOP
   10 G=F(I)
      RETURN
      END

      FUNCTION RADMAT(NI,LI,NF,LF,LA)
C
C CALC. EQ.(41) IN NILSSONS PAPER(1955)
C (NF,LF(R*EXP(LA))NI,LI)
C
      RADMAT=0.0
      IF(LF.GT.(LI+LA).OR.LF.LT.(LI-LA)) GO TO 10
      IF(NF.GT.(NI+LA).OR.NF.LT.(NI-LA)) GO TO 10
      RADMAT=1.0
      IF(LA.EQ.0) GO TO 10
C
C DEFINES SYMBOLS 2 TIMES THAT OF NILSSON
C
      N=NI-LI
      NP=NF-LF
      NY=LF-LI+LA
      NYP=LI-LF+LA
      IT=LI+LF+LA+1
      MINSIG=N-NY
      MAXSIG=N
      IF((NP-NYP).GT.MINSIG) MINSIG=NP-NYP
      IF(NP.LT.N) MAXSIG=NP
      IF(MINSIG.LT.0) MINSIG=0
      A=G(N+2)*G(NP+2)
      B=G(N+IT-NY+2)*G(NP+IT-NYP+2)
      A=SQRT(A/B)*G(NYP+2)*G(NY+2)
      SUM=0.0
      DO 2 ISIG=MINSIG,MAXSIG,2
      B=G(ISIG+2)*G(N-ISIG+2)*G(NP-ISIG+2)*
     1G(ISIG+NY-N+2)*G(ISIG+NYP-NP+2)
      SUM=SUM+G(IT+ISIG+2)/B
  2   CONTINUE
      RADMAT=A*SUM
  10  CONTINUE
      RETURN
      END

      SUBROUTINE E1M2
      COMMON /CO4/ R0,ANN1,IBAND,AMASS,Z,AIS
      COMMON /CO5/ GS,GL,GSP,GLP,GR
      COMMON /CO6/ Q,YBR
      COMMON /CO8/ SPINI,SPINF,COFI(25),COFF(25),
     1AAI(25,5,2),AAF(25,5,2),KI(25),KF(25),
     2UI(25),UF(25),VI(25),VF(25),
     3API(25),APF(25),ANI(25),ANF(25),
     4NI(25),NF(25),NBANDI,NBANDF
     5,EI,EF,EG,JI,JF
      DIMENSION AI(5,2),AF(5,2)
      GL1=GL+GR
      GS1=GS+GR
      GLP1=GLP+GR
      GSP1=GSP+GR
      E1TEST=0
      IF(IABS(JI-JF).LE.2)E1TEST=1
C  CALCULATE BM2 AND BE1
      SUMA=0.
      SUMB=0.
      FA=1.0
      FB=1.0
      DO 63 I=1,NBANDI
      DO 63 J=1,NBANDF
      APIJ=API(I)*APF(J)
      ANIJ=ANI(I)*ANF(J)
      GO TO 90
C ISOSPIN FOR 23NA BEGIN
      B=SQRT(1.-AIS*AIS)
      X=0.6
      APIJ=AIS*SQRT(0.666667)
      ANIJ=AIS*SQRT(0.166667)+B*SQRT(0.5)
      IF(VI(I).LT.X.AND.VF(J).LT.X) GO TO 71
      IF(VI(I).GT.X.AND.VF(J).GT.X) GO TO 72
      GO TO 80
   71 APIJ=0.6666667*AIS*AIS
      ANIJ=(0.33333*AIS*AIS)+B*B
      GO TO 80
   72 APIJ=1.0
      ANIJ=0.0
   80 CONTINUE
   90 CONTINUE
C ISOSPIN FOR 23NA END
      COFIJ=COFI(I)*COFF(J)
      PRINT 40,I,J,COFIJ
 40   FORMAT(1X,'I=',I3,'J=',I3,'COFIJ=',F6.3)
      IF(ABS(COFIJ).LT.0.01) GO TO 62
      DO 60 L=1,5
      DO 60 M=1,2
      AI(L,M)=AAI(I,L,M)
   60 AF(L,M)=AAF(J,L,M)
      SKI=KI(I)
      SKI=SKI*0.5
      SKF=KF(J)
      SKF=SKF*0.5
      UVE1=(UI(I)*UF(J)-VI(I)*VF(J))
      IF(E1TEST.EQ.0) GO TO 62
      IF(ABS(SKI-SKF).GT.1) GO TO 62
      SLA=1.0
      SUMB=SUMB+COFIJ*( CG(SPINI,1.0,SKI,SKF-SKI,SPINF)*
     4(UVE1*
     1SUME2(SKI,SKF,SLA,NI(I),NF(J),AI,AF,1.))
     3+(-1.0)**(NF(J)+IFIX(
     2SPINF+2.*SKF+0.6))*SUME2(SKI,SKF,SLA,NI(I),NF(J),AI,AF,-1.)*
     5UVE1*
     3CG(SPINI,1.,SKI,-(SKF+SKI),SPINF))
   62 CONTINUE
      IF(ABS(JI-JF).GT.4.) GO TO 63
      IF(ABS(SKI-SKF).GT.2.) GO TO 63
      BB1=0.
      BB=0.
      BFAC=0.0
      CC1=0.0
      CC=0.0
      CC3=0.0
      UVM2=(UI(I)*UF(J)+VI(I)*VF(J))
      IF(KI(I).NE.1)GO TO 61
      IF(KF(J).NE.1) GO TO 61
      IF(APIJ.LT.0.00001) GO TO 21
      BB1=SUMBG(SKI,SKF,2.,NI(I),NF(J),AI,AF,GSP1,GLP1,-1.)
  21  CONTINUE
      IF(ANIJ.LT.0.00001) GO TO 20
      BB=SUMBG(SKI,SKF,2.,NI(I),NF(J),AI,AF,GS1,GL1,-1.)
  20  CONTINUE
      BFAC=(-1.)**(1+NF(J)+IFIX(SPINF+0.6))*CG(SPINI,2.,0.5,-1.,SPINF)
   61 CONTINUE
      IF(ANIJ.LT.0.00001) GO TO 31
      CC=SUMBG(SKI,SKF,2.,NI(I),NF(J),AI,AF,GS1,GL1,1.)
   31 CONTINUE
      IF(APIJ.LT.0.00001) GO TO 30
      CC1=SUMBG(SKI,SKF,2.,NI(I),NF(J),AI,AF,GSP1,GLP1,1.)
   30 CONTINUE
      CC3=CG(SPINI,2.,SKI,SKF-SKI,SPINF)
      SUMA=SUMA+COFIJ*((CC1*CC3+BB1*BFAC)*APIJ+
     1(CC*CC3+BB*BFAC)*ANIJ)*UVM2
   63 CONTINUE
      BM2=SUMA*SUMA*1.7448E-05*SQRT(Q)
  
      BM2X=BM2*1.E+04
      IF(SUMA.LT.0.0) FA=-1.0
      TM2=1.0E10
      TTM2=BM2*12.279E+12*(EG)**5
      IF(TTM2.NE.0) TM2=1.E+12/TTM2
      TWM2=0.6582/(1.5E-05*AMASS**(.66666)*EG**5)
      WEM2=TWM2/TM2
      BE1=SUMB*SUMB*SQRT(Q)*0.3786
      BE1X=BE1*0.9043E+04
      IF(SUMB.LT.0.0)FB=-1.0
      TE1=1.0E10
      TTE1=BE1*15.923E+16*(EG)**3
      IF(TTE1.NE.0) TE1=1.E+12/TTE1
      TWE1=0.6582/(68.*AMASS**(.66666)*EG**3)
      WEE1=TWE1/TE1
      TTME=TTM2+TTE1
      IEI=EI
      IEF=EF
      PRINT 322,IEI,IEF,JI,JF,BM2,TM2,TWM2,WEM2,TTM2
      WRITE(10,322)IEI,IEF,JI,JF,BM2,TM2,TWM2,WEM2,TTM2,BM2X
  322 FORMAT(/,1X,I5,I6,I3,'/2',I3,'/2',' M2 ',6E10.3)
      IF(E1TEST.NE.1) GO TO 321
      PRINT 320,BE1,TE1,TWE1,WEE1,TTE1
      WRITE(10,320)BE1,TE1,TWE1,WEE1,TTE1,BE1X
  320 FORMAT(1X,22(' '),'E1 ',6E10.3)
      DELT=99.99999
      FAB=FA*FB
      IF(TM2.GT.0.0)DELT=SQRT(TE1/TM2)*(-FAB)
      IF(ABS(DELT).LT.0.00001) DELT=0.0
      PRINT 323,TTME,DELT
      WRITE(10,323)TTME,DELT
  321 CONTINUE
  323 FORMAT(1X,'TOTAL DECAY TT(E1+M2)= ',E10.3,
     1'(1/SEC)  MIXING RATIO DELTA= ',F9.5)
      RETURN
      END

