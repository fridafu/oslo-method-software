        PROGRAM GAMMA
C  PROGRAM FOR GAMMA DISTRIBUTION ANALYSIS. ALL PRIMARIES FROM
C  SINGLE LEVEL (MAX 5) IN TERMS OF STATISTICAL TENSORS
      CHARACTER ISYMB*5,INBUF*80,LABL*80
      DIMENSION F(56)
      DIMENSION Q(5,4),DMIN(5),DSTEP(5),DMAX(5),ANGLE(10)
     1,ICONTR(15),R(4),SI(5)
     1,S(10,5),DS(10,5),P(10,4),W(10,5),E(4,4),EF(4,4),RS(4)
     2,T(15,15),JU(2),MUT(15),MA(15),MI(15),RMA(15),RMI(15),
     3LMIN(5),LMAX(5),LADD(5),C(5,3,5),B1(5,10,5),B2(5,10,5)
     4,B3(5,10,5),DLTA(5),CHI(50,50),SUT(10),A(4,10,5)
     1,OUTP(10,2),RMII(15),RMAI(15)
     5,JF(5),SSI(5),LPL(130),LCODE(50),KUT(50),RO(5),IFX(6)
     6,RALF(5),SRALF(5)
      COMMON F,E,RS,R,A,B1,B2,B3,IMAX,KMAX,SI,W,EF,S,SSI,RO,RMA
     1,RMI,MA,MI,T,IFI,NGEOM,CHISQS,NSUM,ILIM
        DATA(ICONTR(I),I=1,13)/'ANG','OBS','ATT','LIM',
     1'SPI','VAR','FIT','PLO','STO','FIX','RLM','RFL','POL'/
        DATA(LCODE(J),J=1,38)/'1','2','3','4','5','6','7','8',
     1'9','0','A','B','C','D','E','F','G','H','I','J','K',
     2'L','M','N','O','P','Q','R','S','T','U','V','W','Y',
     3'Z','[','\',']'/
        DATA LABL/' NO LABEL INPUT FROM FILE',
     1' YET.                    '/
      F(1)=1.
      DO 1 J=2,34
    1 F(J)=F(J-1)*(J-1)
C  SET UP INITIAL AND DEFAULT VALUES OF VARIOUS OPTIONAL INPUT
      ITH=0
      IMAX=3
      ANGLE(1)=0.
      ANGLE(2)=55.
      ANGLE(3)=90.
      ANGLE(4)=60.
      ANGLE(5)=90.
C  NO. OF GAMMAS FROM INITIAL LEVEL
      NGEOM=1
      DO 2 J=1,5
C  MIXING COEFF,S (ANGLES)
      DMIN(J)=-90.
      DSTEP(J)=5.
      DMAX(J)=90.
C  ATTENUATION COEFFICIENTS FOR ALL GAMMAS
      Q(J,1)=1.
      Q(J,2)=1.
      Q(J,3)=1.
    2 Q(J,4)=0.7000
C  QUANTUM NUMBER LIMITS
      MMAXX=15
      LMAXX=2
      KMAXX=15
C  INITIALLY NO FIXED TENSORS
      IFI=0
        IPLN=1
C  INITIALLY, VARY DELTA(1)
      JVAR=1
      IPLOT=1
      JU(1)=2H
      JU(2)=2H/2
C  DEFAULT TENSOR ATTENUATION RELATIVE TO LOWEST M POPULATION
        ILIM=1
        RMAI(1)=1.
        RMII(1)=1.
        RMAI(2)=0.4
        RMII(2)=1.0
        RMAI(3)=1.0
        RMII(3)=0.0
        RMAI(4)=0.0
        RMII(4)=0.6
        OPEN(19,FILE='GAMIN:DATA',STATUS='OLD')
        OPEN(20,FILE='GAMUT:DATA')
C  CONTROL CARDS ARE..
C   1 ANG  READ ICT1 ANGLES FROM THE FOLLOWING CARD
C   2 OBS  READ INTENSITIES,ICT2 ANGLES, ICT1 GAMMAS (CARDS)
C   3 ATT  READ Q2,Q4,Q6 FOR GAMMA NO. ICT1
C   4 LIM  QUANTUM NUMBER LIMITS MMAXX AND LMAXX
C   5 SPI  READ SPINS AND DELTAS, ONE CARD FOR EACH GAMMA
C   6 VAR  DELTA NO. TO BE VARIED IN PLOT
C   7 FIT  DO FITS FOR CURRENT OBSERVATIONS AND SPINS
C   8 PLO  PRINTER-PLOT ALL CHISQ.CURVES
C   9 STO  END OF RUN
C  10 FIX  READ FIXED TENSORS OR POPULATION..
C          FIX  1  = READ FIXED POPULATION PARAMETERS
C          FIX  2  = READ FIXED SIGMA FOR POPULATION DISTRIBUTION (SAWA)
C  11 RLM  READ LIMITS FOR RHO2,4 AND 6 (LOW,HIGH)
C  12 RFL  CANCEL USE OF INPUT TENSOR LIMITS,USE PHYSICAL LIMITS
C  13 COM  COMMENTS (50 COULUMNS)
C  14 POL  REVERSE PLOT,I.E.CURRENT CHI-SQ. VERSUS THEORIES
C          OTHER THAN THE VARIED DELTA.USEFUL FOR TWO EQUAL DELT
C          AS.
   7       READ(1,1999)INBUF
 1999   FORMAT(A80)
        READ(INBUF(1:3),2001)MCONTR
        IF(MCONTR.EQ.'COM')GO TO 400
 2000 FORMAT(A3,3I2,E11.0,2E10.0)
      DO 8 I=1,13
      IF(ICONTR(I).NE.MCONTR)GO TO 8
      GO TO(10,11,13,14,15,17,20,100,16,210,500,501,502)I
    8 CONTINUE
    9 WRITE(20,1998)(ILABL(J),J=1,10)
 1998 FORMAT(' ERROR INPUT CARD: ',10A5)
      GO TO 7
C  ANGLE CARD
 10    READ(INBUF(5:80),*)IMAX
        IF(IMAX.GT.10)GO TO 9
      READ (1,*)(ANGLE(I),I=1,IMAX)
 2001 FORMAT(A3)
      WRITE (20,3100)IMAX,(ANGLE(I),I=1,IMAX)
 3100    FORMAT('0',I3,' ANGLES= ',10F6.2)
      GO TO 7
 400     DO 401 I=2,10
 401     LABL(I-1)=ILABL(I)
        GO TO 7
C  INPUT TENSOR ATTENUATION LIMITS
C  (LARGE,SMALL)2,(SMALL,LARGE)4,ETC..
 500    READ(INBUF(5:80),*)RMII(2),RMAI(2),RMII(3),RMAI(3),
     1RMII(4),RMAI(4)
        RMI(1)=1.
        RMII(1)=1.
        RMAI(1)=1.
        RMA(1)=1.
        ILIM=1
        GO TO 7
 501    ILIM=0
        GO TO 7
C  OBSERVED INTENSITIES AND ERRORS
 11     READ(INBUF(5:80),*)NGEOM
        IF(NGEOM.GT.5)GO TO 9
      DO 12 J=1,NGEOM
      READ (1,*)(S(I,J),I=1,IMAX)
      READ (1,*)(DS(I,J),I=1,IMAX)
      WRITE (20,3101)J
 3101 FORMAT('0GAMMA-',I2,' INTENSITIES AND ERRORS')
      WRITE (20,3102)(S(I,J),I=1,IMAX)
   12 WRITE (20,3102)(DS(I,J),I=1,IMAX)
 2002 FORMAT(8F10.2)
 3102 FORMAT(' ',10F10.2)
      GO TO 7
C  ATTENUATION COEFFICIENTS
 13     READ(INBUF(5:80),*)ICT1,AC1,AC2,AC3
        IF(ICT1.GT.NGEOM)GO TO 9
      Q(ICT1,2)=AC1
      Q(ICT1,3)=AC2
      Q(ICT1,4)=AC3
      GO TO 7
C  QUANTUM NUMBER LIMITS
 14     READ(INBUF(5:80),*)ICT1,ICT2
        IF(ICT1.EQ.0)GO TO 9
      IF(ICT2.GT.3)GO TO 9
      MMAXX=ICT1
      LMAXX=ICT2
      WRITE (20,3105)MMAXX,LMAXX
 3105 FORMAT('0MAX.',I3,' M-STATES, AND MAX. L=',I2,'-GAMMAS')
      GO TO 7
C  SPINS AND MIXING LIMITS
 15     READ(INBUF(5:80),*)ICT1,ICT2,ICT3,AC1,AC2,AC3
        IF(ICT1.LE.0.OR.ICT1.GT.NGEOM)ICT1=1
      IF(ICT2-2*(ICT2/2).NE.ICT3-2*(ICT3/2))GO TO 9
      JA=ICT2
      JF(ICT1)=ICT3
        IF(AC2.EQ.0..AND.ABS(ICT2-ICT3).NE.2*LMAXX)GO TO 18
      DMIN(ICT1)=AC1
      DSTEP(ICT1)=AC2
      DMAX(ICT1)=AC3
   18 WRITE (20,3106)ICT1,JA,ICT3,AC1,AC2,AC3
 3106 FORMAT('0GAMMA-',I2,' THEORY. INPUT=',2I2,3F6.2)
      GO TO 7
 16    CLOSE(19)
      CLOSE(20)
        STOP
C  MIXING PARAMETER TO BE VARIED IN PLOT-ROUTINE AND INNER LOOP
 17     READ(INBUF(5:80),*)ICT1
        IF(ICT1.GT.NGEOM)GO TO 9
      JVAR=ICT1
        GO TO 7
C  START FITTING PROCEDURE WITH EXCISTING DATA
C  INITIALLY, THE INTENSITIES FOR ALL GEOMETRIES ARE ESTIMATED BY
C  A LEG.FIT ( P(0),P(2) AND P(4))
   20 DO 21 I=1,IMAX
      THT2=COS(ANGLE(I)*0.01745329252)
      THT2=THT2*THT2
      P(I,1)=1.
      P(I,2)=1.5*THT2-0.5
      P(I,3)=THT2*(4.375*THT2-3.75)+0.375
   21 P(I,4)=THT2*(THT2*(14.4375*THT2-19.6875)+6.5625)-0.3125
C  DO FITS FOR ALL OBSERVATIONS
      CHISQS=0.
      FREE=IMAX-3
      IF(FREE.LE.0.)FREE=1.
      WRITE (20,3002)
 3002 FORMAT( '0 GEOM.',8X,'A0',18X,'A2',18X,'A4',11X,'CHISQ.'/)
        WRITE(20,1989)LABL
 1989   FORMAT(A80)
      DO 30 J=1,NGEOM
C  ESTABLISH WEIGHTS
      DO 23 I=1,IMAX
      IF(DS(I,J).EQ.0.)DS(I,J)=SQRT(S(I,J))
      W(I,J)=1./(DS(I,J)*DS(I,J))
   23 CHISQS=CHISQS+W(I,J)*S(I,J)*S(I,J)
      DO 27 K1=1,3
      DO 25 K2=1,3
      SUM1=0.
      DO 24 I=1,IMAX
   24 SUM1=SUM1+P(I,K1)*W(I,J)*P(I,K2)
        E(K2,K1)=SUM1
        EF(K1,K2)=SUM1
        EF(K2,K1)=SUM1
   25 E(K1,K2)=SUM1
      SUM1=0.
      DO 26 I=1,IMAX
   26 SUM1=SUM1+P(I,K1)*W(I,J)*S(I,J)
      IFX(K1)=1
   27 RS(K1)=SUM1
      CALL INV(3,IFX)
      CALL PARCLC(3)
      CHISQ=0.
      DO 29 I=1,IMAX
      SUM1=0.
      DO 28 K1=1,3
   28 SUM1=SUM1+R(K1)*P(I,K1)
      SUM1=S(I,J)-SUM1
   29 CHISQ=CHISQ+SUM1*SUM1*W(I,J)
      CHISQ=CHISQ/FREE
      DO 31 K1=1,3
   31 RS(K1)=SQRT(E(K1,K1))
C  OUTPUT RESULTS FROM LEG.FIT
      WRITE (20,3003)J,(R(K1),RS(K1),K1=1,3),CHISQ
 3003 FORMAT(I5,3(F10.2,' (',F7.2,')'),F8.3)
C  INITIAL NORMALISATIONS
      IF(J.EQ.1)SNORM=R(1)
   30 SI(J)=R(1)/SNORM
C  SI(J) ARE INTENSITIES RELATIVE TO GAMMA1
C  FIND THE ACTUAL QUANTUM NUMBER LIMITS
C  IHL=1 FOR INTEGER =2 FOR HALF-INTEGER SPINS
      IHL=1
      IF(JA-2*(JA/2).NE.0)IHL=2
      JTEST=(JA-IHL+3)/2
      MMAX=MIN0(JTEST,MMAXX,15)
      KMAX=MIN0(JTEST,KMAXX,4)
      MUT(1)=IHL-1
      DO 40 K=2,MMAX
   40 MUT(K)=MUT(K-1)+IHL
        JAA=JA/(3-IHL)
      WRITE (20,3007)JAA,JU(IHL),(MUT(K),JU(IHL),K=1,JTEST)
 3007 FORMAT(' ',/'0POPULATION-TENSOR MATRIX FOR SPIN= ',I2,A2//
     1'  K,   M=',15(I4,A2,2X)/)
      DO 42 K=1,KMAX
      KK=K+K-2
      DO 41 M=1,JTEST
      MM=M+M+IHL-3
   41 T(K,M)=TEPO(JA,MM,KK+KK)
   42 WRITE (20,3008)KK,(T(K,M),M=1,JTEST)
 3008 FORMAT(I4,4X,15F8.4)
C  FIND PHYSICAL LIMITS FOR THE STATISTICAL TENSORS
      DO 45 K=1,KMAX
      RMAX=-1000.
      RMIN=-RMAX
      DO 44 M=1,MMAX
      IF(T(K,M).LE.RMAX)GO TO 43
      RMAX=T(K,M)
      MA(K)=M
   43 IF(T(K,M).GE.RMIN)GO TO 44
      RMIN=T(K,M)
      MI(K)=M
   44 CONTINUE
        IF(ILIM.NE.1)GO TO 450
        RMIN=RMII(K)*T(K,1)
        RMAX=RMAI(K)*T(K,1)
 450    RMA(K)=RMAX
      RMI(K)=RMIN
        KK=K+K-2
        WRITE(20,3201)KK,RMIN,KK,RMAX
 3201 FORMAT(' RMIN(',I2,')=',F8.4,' ,RMAX(',I2,')=',F8.4)
   45 CONTINUE
      WRITE (20,3009)
 3009 FORMAT(/'0THEORETICAL DISTRIBUTION COEFFICIENTS'//
     1' GEOM.JI - JF  K     L,L',7X,'L,L+1    L+1,L+1',5X,'Q(K)'/)
C  GET MULTIPOLE L AND THEORIES FOR ALL GAMMAS
C  NSUM=NUMBER OF PARAMETERS
      NSUM=0
      LMX=LMAXX
      DO 51 J=1,NGEOM
      JB=JF(J)
      LMIN(J)=MAX0(IABS(JA-JB)/2,1,0)
      LMAX(J)=MIN0((JA+JB)/2,LMAXX,LMIN(J)+1)
        IF(JA.LE.1.OR.JB.EQ.0)LMAX(J)=LMIN(J)
        LADD(J)=1
      IF(LMIN(J)-LMAX(J))48,49,46
 46   LMIN(J)=LMAX(J)
   48 LADD(J)=3
   49 J1=JA/(3-IHL)
      J2=JB/(3-IHL)
      LAD=LADD(J)
      NSUM=NSUM+(LAD-1)/2
      IF(LMAX(J).GT.LMX)LMX=LMAX(J)
      DO 51 K=1,KMAX
        C(K,2,J)=0.
        C(K,3,J)=0.
      KK=K+K-2
      LIND=1
      LMI=LMIN(J)
      LMA=LMAX(J)
      DO 50 L=LMI,LMA
      DO 50 L1=L,LMA
      C(K,LIND,J)=OBS(JA,JB,L+L,L1+L1,KK+KK)
   50 LIND=LIND+1
      DO 52 I=1,IMAX
        CMULT=P(I,K)*Q(J,K)
        B2(K,I,J)=0.
        B3(K,I,J)=0.
      B1(K,I,J)=C(K,1,J)*CMULT
      IF(LAD.EQ.1)GO TO 52
      B2(K,I,J)=C(K,2,J)*CMULT
      B3(K,I,J)=C(K,3,J)*CMULT
   52 CONTINUE
   51 WRITE(20,3010)J,J1,JU(IHL),J2,JU(IHL),KK,
     1(C(K,L,J),L=1,3),Q(J,K)
 3010 FORMAT(I3,I3,A2,I4,A2,I2,4F10.6)
      KMAX=MIN0(KMAX,LMX+1,4)
C  NUMBER OF DEGREES OF FREEDOM
      KFREE=KMAX
      IF(IFI.EQ.1)KFREE=1
      NSUM=NGEOM*IMAX-NSUM-KFREE-NGEOM+1
      IF(LADD(JVAR).EQ.3)ITH=ITH+1
C  INITIAL MIXING VALUES
   55 DO 56 J=1,NGEOM
   56 DLTA(J)=DMIN(J)
      WRITE (20,3011)KFREE,JVAR,NSUM
 3011 FORMAT(//' FITS TO',I3,' FREE TENSORS. DELTA',I3,' VARIED IN CURVE
     1,',I3,' DEGREES OF FREEDOM'//)
      IF(NSUM.EQ.0)NSUM=1
      IF(NSUM.GT.0)GO TO 57
      WRITE (20,3012)
 3012 FORMAT(//' TOO FEW DATA POINTS, NO FIT ATTEMPTED'//)
      GO TO 7
C  START MAIN FITTING LOOP
   57 WRITE (20,3013)
 3013 FORMAT('0GEOM. J1  - J2     DELTA   FIX/VAR')
        IF(ITH.GT.0)WRITE(20,3015)LCODE(ITH)
 3015 FORMAT(' PLOT SYMBOL WILL BE ',A1)
        DLTA(JVAR)=DMIN(JVAR)
      DO 59 J=1,NGEOM
        ISYMB='  FIX'
      IF(J.EQ.JVAR)ISYMB='  VAR'
        IF(LADD(J).EQ.1)ISYMB=' PURE'
      WRITE (20,3014)J,JA,JU(IHL),JF(J),JU(IHL),DLTA(J),ISYMB
 3014 FORMAT(' ',I3,I5,A2,I4,A2,F10.5,A5)
      IF(JVAR.EQ.J)GO TO 59
        DLCAL=DLTA(J)
        JCAL=J
        CALL CMX(DLCAL,JCAL)
   59 CONTINUE
      IOUT=1
C  INNER LOOP FOR DELTA(JVAR)
      KJI=1
C  KJI COUNTS NUMBER OF CURVE-POINTS
   60 CALL CMX(DLTA(JVAR),JVAR)
      CALL FIT(CHISQ)
C  RETURNS WITH PARAMETERS IN COMMON
      IF(LADD(JVAR).EQ.1)GO TO 97
      IF(KJI.GT.50)GO TO 65
      CHI(ITH,KJI)=CHISQ
      KJI=KJI+1
   65 OUTP(IOUT,1)=DLTA(JVAR)
      OUTP(IOUT,2)=CHISQ
      IOUT=IOUT+1
      IF(IOUT.LT.11)GO TO 70
   66 IOUT=IOUT-1
      WRITE (20,3020)(OUTP(I,1),I=1,IOUT)
 3020 FORMAT('0DELTA=',10F10.4)
      WRITE (20,3021)(OUTP(I,2),I=1,IOUT)
 3021 FORMAT(' CHISQ=',10E10.4)
      IOUT=1
   70 DLTA(JVAR)=DLTA(JVAR)+DSTEP(JVAR)
      IF(DLTA(JVAR).LE.DMAX(JVAR))GO TO 60
C  INNER LOOP FINISHED, TYPE REMAINING OUPUT
      IF(IOUT.NE.1)GO TO 66
C  SEARCH FOR MINIMA THROUGH CURRENT CHISQUARE CURVE
      IF(KJI.LE.3)GO TO 90
      WRITE (20,3150)
 3150 FORMAT('0 MINIMUM SEARCH FOR CURRENT THEORY'/)
      KJI=KJI-1
      LSLO=-1
C  LSLO=-1 IF CURVE GOES UP,=1 IF DOWN
      D1=DMIN(JVAR)
      DX=DSTEP(JVAR)
      DO 81 ISOEK=2,KJI
      IF(LSLO.EQ.1)GO TO 69
C  CURVE IS STILL GOING UP
      IF(CHI(ITH,ISOEK).GT.CHI(ITH,ISOEK-1))GO TO 80
C  CURVE HAS TURNED DOWN
      LSLO=1
      GO TO 80
C  CURVE WAS GOING DOWN, TEST IF STILL TRUE
   69 IF(CHI(ITH,ISOEK).LE.CHI(ITH,ISOEK-1))GO TO 80
C  NO, MINIMUM IS PASSED
      LSLO=-1
      DY=DX
      NTRY=1
      G1=CHI(ITH,ISOEK-2)
      G2=CHI(ITH,ISOEK-1)
      G3=CHI(ITH,ISOEK)
      DD=D1
      IF((G1-G2)/DX.LT.1.E-5.AND.(G3-G2)/DX.LT.1.E-5)GO TO 82
   78 IF(G1.EQ.G3)GO TO 71
      FA=G2-G3
      IF(ABS(FA).LT.0.0001)GO TO 77
      FA=(G1-G2)/FA
      DD=DD-0.5*DY*(FA+1.)/(1.-FA)
      GO TO 71
   77 DD=DD+0.5*DY
   71 CALL CMX(DD,JVAR)
      CALL FIT(CHISQ)
      IF(NTRY.EQ.2)GO TO 79
      DY=DY*0.5
      G2=CHISQ
        DNE=DD-DY
        DNU=DNE
      CALL CMX(DNE,JVAR)
      CALL FIT(G1)
      DNE=DD+DY
      CALL CMX(DNE,JVAR)
      CALL FIT(G3)
      NTRY=NTRY+1
      GO TO 78
   79 C1=0.5*NSUM*((G1-CHISQ)/(DNU-DD)**2+(G3-CHISQ)/(DNE-DD)**2)
   72 RHO=1.
      IF(CHISQ.GT.1.)RHO=SQRT(CHISQ)
      IF(C1.GT.0.1E-12)C1=SQRT(1./C1)*RHO
      WRITE (20,3040)JVAR,DD,C1,CHISQ
 3040 FORMAT(//' ====LOCAL MINIMUM AT DELTA(',I2,')= ',
     1F9.4,' (',F7.4,') DEGREES,CHISQ=',E10.4)
      DO 73 K=1,KMAX
        RALF(K)=RO(K)/T(K,1)
        RS(K)=RS(K)*RHO
 73     SRALF(K)=RS(K)/ABS(T(K,1))
      WRITE (20,3041)(RO(K),RS(K),K=1,KMAX)
 3041 FORMAT(' TENSORS= ',5(F8.4,' (',F7.4,')'))
        WRITE(20,3045)(RALF(K),SRALF(K),K=1,KMAX)
 3045   FORMAT(' ATTENU.= ',5(F8.4,' (',F7.4,')')/)
      WRITE (20,3043)(ANGLE(I),I=1,IMAX)
 3043 FORMAT(' GAMMA INTENSITY          ,ANGLE=',F8.2,9F10.2)
      DO 76 J=1,NGEOM
      SS=SI(J)*R(1)
      DSS=RHO*RHO/SSI(J)
      DSS=SQRT(E(1,1)*RHO*RHO*SI(J)*SI(J)+R(1)*R(1)*DSS)
      DO 75 I=1,IMAX
      SUM1=0.
      DO 74 K=1,KMAX
   74 SUM1=SUM1+RO(K)*A(K,I,J)
   75 SUT(I)=SUM1*SS
   76 WRITE (20,3042)J,SS,DSS,(SUT(I),I=1,IMAX)
 3042 FORMAT(I5,E13.6,' (',E12.6,')',10F10.2)
      IF(LADD(JVAR).EQ.1)GO TO 90
   80 D1=D1+DX
   81 CONTINUE
      GO TO 90
   82 WRITE (20,3044)D1
 3044 FORMAT('0 FLAT CURVE AROUND ALPHA= ',F9.4/)
      GO TO 80
C  END OF MINIMA SEARCH STEP OTHER DELTAS IF REQUIRED
   90 IF(NGEOM.EQ.1)GO TO 7
      DO 95 J=1,NGEOM
      IF(J.EQ.JVAR)GO TO 95
      IF(DSTEP(J).EQ.0..OR.LADD(J).EQ.1)GO TO 95
      DLTA(J)=DLTA(J)+DSTEP(J)
      IF(DLTA(J).LE.DMAX(J))GO TO 96
      DLTA(J)=DMIN(J)
   95 CONTINUE
      GO TO 7
   96 IF(LADD(JVAR).EQ.3)ITH=ITH+1
      IF(ITH.GT.38)ITH=1
      GO TO 57
   97 C1=1.E+20
      GO TO 72
C  FIXED ALLIGNMENT NOT IMPLEMENTED YET
  210 GO TO 9
C  PRINTER-PLOT ROUTINE FOR CURRENT ACCUMULATED CHISQ CURVES
C  ALL CURVES ASSUMED SAME DELTA-VALUES...
  502   ITT1=KJI
        IF(ITH.EQ.0)ITH=ITHW
        ITT2=ITH
        IPLN=0
        GO TO 101
 100    ITT1=ITH
        ITT2=KJI
 101    WRITE (20,4000)ITH,KJI
 4000 FORMAT('1',//I3,' THEORIES PLOTTED,',I3,' POINTS PR. CURVE'/)
        IF(IPLN.EQ.0)WRITE(20,6001)JVAR
 6001   FORMAT(' REVERSE PLOT, ALL DELTA ',I2,'IN EACH POINT')
        IBLA=1H 
        WRITE(20,1989)(LABL(I),I=1,10)
      WRITE (20,4001)
 4001 FORMAT(' DELTA .1',20X,'1.0',20X,'10',21X,'100',20X,'1000',
     118X,'10000'/)
      WRITE (20,4002)
 4002 FORMAT(' ......I',5('......................I'))
      DO 200 K=1,130
  200 LPL(K)=IBLA
      D=DMIN(JVAR)
      DO 205 I=1,ITT2
      DO 203 J=1,ITT1
        IF(IPLN.EQ.1)KL=(ALOG10(CHI(J  ,I))+1.)*23.+0.5
        IF(IPLN.EQ.0)KL=(ALOG10(CHI(I  ,J))+1.)*23.+0.5
      IF(KL.GT.129)KL=129
      IF(KL.LT.1)KL=1
      KUT(J)=KL
      IF(LPL(KL).NE.IBLA)GO TO 201
      GO TO 202
  201 LPL(KL)=1HX
      GO TO 203
  202 LPL(KL)=LCODE(J)
  203 CONTINUE
      WRITE (20,4003)D,(LPL(K),K=1,129)
 4003 FORMAT(1H ,F6.2,'.',129A1)
      DO 204 J=1,ITT1
  204 LPL(KUT(J))=IBLA
  205 D=D+DSTEP(JVAR)
      WRITE (20,4002)
        IPLN=1
        ITHW=ITH
        ITH=0
      GO TO 7
      END

      SUBROUTINE CMX(D,J)
      DIMENSION F(56),E(4,4),RS(4),R(4),A(4,10,5),B1(5,10,5),
     1B2(5,10,5),B3(5,10,5)
      COMMON F,E,RS,R,A,B1,B2,B3,IMAX,KMAX
      C1=D*0.0174532952
      C3=SIN(C1)
      C1=COS(C1)
      C2=C1*C3
      C1=C1*C1
      C3=C3*C3
      DO 1 I=1,IMAX
      DO 1 K=1,KMAX
 1    A(K,I,J)=C1*B1(K,I,J)+C2*B2(K,I,J)+C3*B3(K,I,J)
      RETURN
      END

      SUBROUTINE PARCLC(N)
      DIMENSION F(56),E(4,4),RS(4),R(4)
      COMMON F,E,RS,R
      DO 2 I=1,N
      SUM1=0.
      DO 1 J=1,N
    1 SUM1=SUM1+E(I,J)*RS(J)
    2 R(I)=SUM1
      RETURN
      END

      FUNCTION TEPO(J,M,K)
      I=(J-M)/2
      FASE=1.
      IF(I-2*(I/2).NE.0)FASE=-1.
      C=J+1
      TEPO=SQRT(C)*FASE*CG(J,M,J,-M,K)
      RETURN
      END

      FUNCTION OBS(J1,J2,L,L1,K)
      I=(J1-J2-2+L1-L+K)/2
      FASE=1.
      IF(I-2*(I/2).NE.0)FASE=-1.
      C=(J1+1)*(L1+1)*(L+1)
      OB=FASE*SQRT(C)*CG(L,2,L1,-2,K)*RA(J1,L,J1,L1,J2,K)
      IF(L.NE.L1)OB=OB+OB
      OBS=OB
      RETURN
      END

      SUBROUTINE INV(KMAX,IL)
      DIMENSION F(56),E(4,4),IL(6)
      COMMON F,E
      DO 314 I=1,KMAX
      IF(IL(I))1,314,1
    1 COM=E(I,I)
      E(I,I)=1.
      DO 311 J=1,KMAX
      IF(IL(J))2,311,2
    2 E(I,J)=E(I,J)/COM
  311 CONTINUE
      DO 313 M=1,KMAX
      IF(IL(M))3,313,3
    3 IF(M-I)312,313,312
  312 COM=E(M,I)
      E(M,I)=0.
      DO 315 J=1,KMAX
      IF(IL(J))4,315,4
    4 E(M,J)=E(M,J)-COM*E(I,J)
  315 CONTINUE
  313 CONTINUE
  314 CONTINUE
      RETURN
      END

      FUNCTION RA(IA,IB,IC,ID,IE,IJ)
      DIMENSION F(56),I(7)
      COMMON F
      I(1)=-(IA+IB+IE)/2
      I(2)=-(IC+ID+IE)/2
      I(3)=-(IA+IC+IJ)/2
      I(4)=-(IB+ID+IJ)/2
      I(5)=(IA+IB+IC+ID)/2+2
      I(6)=(IA+ID+IE+IJ)/2+2
      I(7)=(IB+IC+IE+IJ)/2+2
      IZ=I(5)-1
      C1=-1.
      IF(IZ-2*(IZ/2).EQ.0)C1=1.
      ITEST=1
      IZ=1
      SUM=0.
    1 DO 2 J=1,7
      IF(I(J).LE.0)GO TO 3
    2 CONTINUE
      SUM=SUM+C1*F(IZ)/(F(I(1))*F(I(2))*F(I(3))*F(I(4))*F(I(5))
     1*F(I(6))*F(I(7)))
      ITEST=2
    9 C1=-C1
      DO 5 J=1,4
    5 I(J)=I(J)+1
      DO 6 J=5,7
    6 I(J)=I(J)-1
      IZ=IZ+1
      GO TO 1
    3 GO TO(4,8),ITEST
    4 IF(IZ.LE.56)GO TO 9
      GO TO 10
    8 RA=SUM*SQRT(DE(IA,IB,IE)*DE(IC,ID,IE)*DE(IA,IC,IJ)*DE(IB,ID,IJ))
      GO TO 11
   10 RA=0.
   11 RETURN
      END

      FUNCTION CG(J1,M1,J2,M2,J3)
      DIMENSION F(56),I(6)
      COMMON F
      I(1)=(J1+J2-J3)/2+1
      I(2)=(J1-M1)/2+1
      I(3)=(J2+M2)/2+1
        I7=I(2)
        I8=I(3)
      I(4)=(J3-J2+M1)/2+1
      I(5)=(J3-J1-M2)/2+1
      I(6)=1
      SUM=0.
      ITEST=1
      C1=1.
    1 P=1.
      DO 2 J=1,6
      IF(I(J).LE.0)GO TO 3
    2 P=P*F(I(J))
      SUM=SUM+C1/P
      ITEST=2
    9 C1=-C1
      DO 5 J=1,3
    5 I(J)=I(J)-1
      DO 6 J=4,6
    6 I(J)=I(J)+1
      GO TO 1
    3 GO TO(4,8)ITEST
    4 IF(I(6).GT.56)GO TO 10
      GO TO 9
    8 CG=SUM*SQRT((J3+1)*DE(J1,J2,J3)*F((J1+M1)/2+1)*F(I7)
     1*F((J2-M2)/2+1)*F(I8)*F((J3+M1+M2)/2+1)*F((J3-M1-M2)/2+1))
      GO TO 11
   10 CG=0.
   11 RETURN
      END

      FUNCTION DE(I,J,K)
      DIMENSION F(56)
      COMMON F
      I1=1+(I+J-K)/2
      I2=1+(J+K-I)/2
      I3=1+(K+I-J)/2
      I4=1+(I+J+K+2)/2
      DE=F(I1)*F(I2)*F(I3)/F(I4)
      RETURN
      END
