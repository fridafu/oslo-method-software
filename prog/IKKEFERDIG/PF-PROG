        PROGRAM PF
        COMMON/SPECT/NSPEC(8192),NSIZE,C(5),NCAL
        COMMON/PEAK/NOPEAK,PEAKS(400,4)
        CHARACTER FILNAM*20,IDUM*20,FILGML*20
        DIMENSION CDUM(5)
        INTEGER NCALDUM
        DIMENSION ISPEC(8192),IC(18),X(50),Y(50),W(50),E(5,5)
        DIMENSION DATA(8192)
        DATA IC/' ','R','Z','A','S','M','C','B','O',
     1'K','H','T','F','W','G','L','E','I'/
        DATA NC,LENC,KFILA/18,0,0/
        PRINT 1248
 1248   FORMAT('1',//
     1,/,9X,'---------------------------------------------------------'
     2,/,9X,'I                                                        I'
     3,/,9X,'I                   P E A K F I N D                      I'
     4,/,9X,'I                         and                            I'
     5,/,9X,'I            spectrum manipulation program               I'
     6,/,9X,'I                                                        I'
     7,/,9X,'I                                       type H for help  I'
     8,/,9X,'----------------------------------------------------------'
     9,/)

        INDEV=1
        INMOD=1
        ILP=3
        IOUTP=1
        IUT=1
        I3=1
        NUT=1

        INSPC=20
        DO 1 I=1,5
 1      C(I)=0.
        C(2)=1.
        GO TO 5

C  B - DEVICE INPUT
 4      PRINT 1103
 1103   FORMAT(/,' DISC-COMMANDS NOT IMPLEMENTED. USE INSTEAD BATCH')
C 1103   FORMAT(/,'$ COMMAND INPUT FROM TERMINAL OR DISC: 1/2 = ')
C        READ(1,*)INMOD
C        INDEV=1
C        IF(INMOD.EQ.1)GO TO 5
C        INDEV=23
C        OPEN(INDEV,FILE='SPEC:DATA')
 5      IF(INMOD.EQ.1)PRINT 1104
 1104   FORMAT(/,'$PF>')
        READ(INDEV,1105)ICOM
 1105   FORMAT(A1)
        DO 10 I=1,NC
        IF(ICOM.EQ.IC(I))GO TO 12
 10     CONTINUE
 11     PRINT 1106
 1106   FORMAT(/,' COMMAND ERROR ')
        GO TO 5
 12     GO TO(5,20,50,60,70,80,90,4,100,110,130,140,150,160
     1,170,180,40,200)I

C  R - READ SPECTRUM FILE
 20     IF(INMOD.EQ.1)PRINT 1107
 1107   FORMAT('$ FILENAME: ')
        FILGML=FILNAM
        READ(INDEV,2010)FILNAM
 2010   FORMAT(A)
        NSIZE=8192
        SMX=NSIZE
        OPEN(INSPC,FILE=FILNAM,ACCESS='SEQUENTIAL',
     1STATUS='OLD',ERR=402)
        CALL MININO(INSPC,IOUTP,KFILE,DATA,SMX,NCALDUM,CDUM,NCMAX)
        NSIZE=NCMAX
        DO FOR I=1,NSIZE
           NSPEC(I)=DATA(I)+0.5
        ENDDO
        GO TO 5

C  Z - PUT CONSTANT (OR ZERO) IN 'HELP' SPECTRUM
 50     IF(INMOD.EQ.1)PRINT 1170
 1170   FORMAT('$    Type CONSTANT or ZERO:')
        READ(INDEV,*)I1
        DO 51 I=1,NSIZE
 51     ISPEC(I)=I1
        PRINT 1099,I1
 1099   FORMAT(' CONSTANT ',I6,' WRITTEN IN HELP SPECTRUM')
        GO TO 5

C  A - ADD WORK SPECTRUM TO HELP SPECTRUM
 60     DO 61 I= 1,NSIZE
 61     ISPEC(I)=ISPEC(I)+NSPEC(I)
        PRINT 999
 999    FORMAT(' SPECTRA ADDED')
        GO TO 5

C  S - SUBTRACT WORK SPECTRUM FROM HELP SPECTRUM
 70     DO 71 I=1,NSIZE
 71     ISPEC(I)=ISPEC(I)-NSPEC(I)
        PRINT 998
 998    FORMAT(' SPECTRA SUBTRACTED')
        GO TO 5

C  M - MULTIPLY WORK SPECTRUM WITH CONSTANT
 80     IF(INMOD.EQ.1)PRINT 1110
 1110   FORMAT('$     Type LOW,HI(0=MAX),FACTOR:')
        READ(INDEV,*)IM1,IM2,FACT
        IF(IM2.EQ.0.OR.IM2.GE.NSIZE)IM2=NSIZE-1
        IF(IM1.GT.IM2)GO TO 11
        DO 81 I=IM1,IM2
 81     NSPEC(I+1)=NSPEC(I+1)*FACT+0.5
        GO TO 5

C  C - COMPRESS SPECTRUM BY FACTOR 2 (NUMBER OF CHANNELS)
 90     ICH1=0
        DO 91 I=1,NSIZE,2
        ICH1=ICH1+1
 91     NSPEC(ICH1)=NSPEC(I)+NSPEC(I+1)
        PRINT 997,ICH1
 997    FORMAT(' SPECTRUM HAS ',I5,' CHANNELS')
        NSIZE=ICH1
        GO TO 5

C  O - OUTPUT LIST SPECTRUM
 100     IF(INMOD.EQ.1)PRINT 1112
 1112   FORMAT('$    Type UNIT(1=term.,3=l-p),LOW,HI: ')
        NUTG=NUT
        READ(INDEV,*)NUT,IU1,IU2
        IF(NUTG.EQ.1.AND.NUT.EQ.3)THEN
           OPEN(3,FILE='L-P',ACCESS='SEQUENTIAL',ERR=400)
        ENDIF
        IF(NUT.LT.1.OR.NUT.GT.5)GO TO 5
        IF(IU2.EQ.0)IU2=NSIZE-1
        CALL SPOUT(NUT,IU1,IU2,FILNAM)
        GO TO 5

C  K - CALIBRATE SPECTRUM
 110    IF(INMOD.EQ.1)PRINT 1114
 1114   FORMAT('    Type NO.OF TERMS(1,2,3),MODE(1,2,3): ',/,
     1'                  mode 1:a0,a1,a2,..etc.',/,
     2'                  mode 2:channel,energy',/,
     3'                  mode 3:peak no.,energy(from peakfind list',/)
        READ(INDEV,*)NCAL,ICAL
        IF(ICAL.LE.0.OR.ICAL.GT.3)ICAL=3
        IF(NCAL.GT.5)NCAL=5
        DO 111 I=1,5
 111    C(I)=0.
        GO TO(113,115,112)ICAL
 113    IF(INMOD.EQ.1)PRINT 1116,NCAL
 1116   FORMAT('    Type ',I3,' terms (CUT,GAIN,ETC.): ',/)
        READ(INDEV,*)(C(I),I=1,NCAL)
        GO TO 5
 115    IF(INMOD.EQ.1)PRINT 1117
 1117   FORMAT('    Type CHANNEL,ENERGY,ERROR, terminate with 0:',/)
        DO 116 I=1,50
        READ(INDEV,*)X(I),Y(I),W(I)
        IF(W(I).EQ.0.)W(I)=1.
        W(I)=1./(W(I)*W(I))
        IF(X(I).EQ.0.)GO TO 117
 116    CONTINUE
 117    NX=I-1
        CALL FITS(X,Y,W,C,E,NCAL,NX,CHI)
        PRINT 1118,CHI,(C(I),I=1,NCAL)
 1118   FORMAT(' ENERGY CALIBRATION,CHISQ=',E13.6,/,
     1' COEFFICIENTS=',5E13.6,/,
     2' CHANNEL   ENERGY    CALC.ENERGY')
        DO 120 I=1,NX
        SUM=0.
        FAC=1.
        DO 119 J=1,NCAL
        SUM=SUM+C(J)*FAC
 119    FAC=FAC*X(I)
 120    PRINT 1119,X(I),Y(I),SUM
 1119   FORMAT(1H ,3F10.4)
        GO TO 5
 112    IF(INMOD.EQ.1)PRINT 1115
 1115   FORMAT('    Type PEAKNUMBER,ENERGY, terminate with zeros',/)
        DO 118 I=1,50
        READ(INDEV,*)NP1,Y(I)
        IF(NP1.EQ.0)GO TO 117
        W(I)=1./(PEAKS(NP1,2)*PEAKS(NP1,2))
        X(I)=PEAKS(NP1,1)
 118    CONTINUE

C  H - HELP OUTPUT
 130    PRINT 1120
 1120   FORMAT(' Peakfind and spectrum manipulation',
     1' program.',/,' Commands can be given from terminal',
     2' or read from file: "SPEC:DATA".',/,' Commands ',
     3' consists of one letter. If parameters are needed,',/,
     4' they are asked for.')
 
        PRINT 1121
 1121   FORMAT(/,' H list of commands')
        PRINT 1122
 1122   FORMAT(' R read spectrum <filename>',/,
     1' Z const. to help sp.',/,' A add work sp. to help sp.',/,
     2' S subtract work sp. from help sp. to help sp.',/,
     3' M multiply work sp. with factor <factor>',/,
     4' C compress work sp. by adding two and two ch.',/,
     5' O output work sp.listing <unit,channel low and high>',/,
     6' B accept new command',/,
     7' K calibr. of work sp. <no. of terms, mode>',/,
     8'   mode=1:a0,a1,a2,...',/,
     9'   mode=2:channels,energies',/,
     9'   mode=3:peak no.,energy (from peakfind list)',/,
     9' L disc command loop.Rewinds file and adds 1 to fileno.',
     9' at R-command.',/,'   Command L is followed by loop-count',
     9 ' number',/,' I inverse spectrum ,ch 0 goes to max, etc.')
     9
        PRINT 1124
 1124   FORMAT(/'     *** CR FOR MORE INFORMATION ***')
        READ(1,2010)IDUM
        PRINT 1123
 1123   FORMAT(
     1' T transfer help sp.to work sp.',/,
     2' F finds peaks <fwhm,disc,kmax,plot,out>',/,
     3'   FWHM:average fwhm in ch (0=3.5)',/,
     4'   DISC:area rejection limit (%) (0=25%)',/,
     5'   KMAX:no. of terms in polygon for backgr.',/,
     6'   PLOT:1 for "printer plot",0 if not',/,
     7'   OUT:1 for terminal,3 for lineprinter, 0 if not',/,
     8' W list peakfind table on teminal',/,
     9'   <first,last peakno.> first=last=0 means all',/,
     9'   last=0 means last=first+9',/,
     9' G get spectrum information <low,high,unit>')
        GO TO 5
 180    IF(INDEV.NE.23)GO TO 5
        IF(LENC.NE.0)GO TO 181
        KFILA=0
        READ(INDEV,*)NLOP
 181    LENC=LENC+1
        IF(LENC.GE.NLOP)GO TO 182
        KFILA=KFILA+1
        REWIND 23
        GO TO 5
 182    KFILA=0
        LENC=0
        READ(INDEV,*)NLOP
        GO TO 5

C  T - TRANSFER SPECTRUM
 140    DO 141 I=1,NSIZE
 141    NSPEC(I)=ISPEC(I)
        PRINT 1162
 1162   FORMAT(' HELP SP. TO WORK SP. OK')
        GO TO 5

C  F - PEAKFIND CURRENT WORK SP.
 150    IF(INMOD.EQ.1)PRINT 1130,FILNAM,NSIZE
 1130   FORMAT(' PEAKFIND  FOR SPECTRUM ',A20,/,
     1 ' LENGTH ',I5,' CHANNELS',/,' Type :',/,' FWHM',
     2 '(CH),AREA DISC.(%),BGR.TERMS,PLOT(Y/N=1/0)',
     3 'UNIT(1=term.,3=l-p)',/)
        IUTG=IUT
        READ(INDEV,*)FWHM,DISC,KMAX,IPLOT,IUT
        IF(IUTG.EQ.1.AND.IUT.EQ.3)THEN
            OPEN(3,FILE='L-P',ACCESS='SEQUENTIAL',ERR=400)
        ENDIF
        IF(FWHM.EQ.0.)FWHM=3.5
        IF(DISC.EQ.0.)DISC=25.
        IF(KMAX.EQ.0)KMAX=2
        CALL PEAKFI(FWHM,DISC,KMAX,IPLOT,IUT,FILNAM)
        GO TO 5

C  W - LIST PEAKLIST ON TERMINAL
 160    PRINT 1150,(C(I),I=1,NCAL)
 1150   FORMAT('$    CALIBRATION:',5E13.6)
        PRINT 1163
 1163   FORMAT(/,'$    Type FIRST,LAST PEAKS (0,0=all):')
        READ(INDEV,*)I1,I2
        IF(I1.EQ.0.AND.I2.EQ.0)GO TO 161
        IF(I2.EQ.0)I2=I1+9
        IF(I2.GT.NOPEAK)I2=NOPEAK
 163    PRINT 1151
 1151   FORMAT(' NO.',5X,'CHANNEL',15X,'ENERGY',5X,'AREA')
        DO 162 I=I1,I2
        CENT=PEAKS(I,1)
        PEPK=PEAKS(I,2)
        EN=C(1)+CENT*(C(2)+CENT*(C(3)+CENT*(C(4)+CENT*C(5))))
        PEEN=(C(2)+2.*CENT*C(3))*PEPK
 162    PRINT 1152,I,CENT,PEPK,EN,PEEN,PEAKS(I,3),PEAKS(I,4)
 1152   FORMAT(' ',I3,2X,F7.2,' (',F5.2,')',F10.2,' (',
     1F5.2,')',F8.1,' (',F8.1,')')
        GO TO 5

C  I - INVERSE SPECTRUM
 200    MIDLE=NSIZE/2
        DO FOR I=1,MIDLE
          I1=NSPEC(I)
          I2=NSPEC(NSIZE+1-I)
          NSPEC(I)=I2
          NSPEC(NSIZE+1-I)=I2
        ENDDO
        GO TO 5

C  E - EXIT
  40    STOP


 161    I1=1
        I2=NOPEAK
        GO TO 163

C  G - SPECTRUM INORMATION
 170    IF(INMOD.EQ.1)PRINT 1160
 1160   FORMAT('$    Type UNIT(1=term.,3=l-p),LOW,HI:')
        I3G=I3
        READ(INDEV,*)I3,IG1,IG2
        IF(I3G.EQ.1.AND.I3.EQ.3)THEN
            OPEN(3,FILE='L-P',ACCESS='SEQUENTIAL',ERR=400)
        ENDIF
        WRITE(I3,1164)FILNAM
 1164   FORMAT(' FILE: ',A20)
        IF(IG2.GT.NSIZE)IG2=NSIZE-1
        IF(IG1.GT.IG2)IG1=IG2
        SUM=0.
        SUM1=0.
        IMX=0
        ISC=0
        ISC1=100000
        IMIN=0
        DO 171 I=IG1,IG2
        SUM1=SUM1+I*NSPEC(I+1)
        SUM=SUM+NSPEC(I+1)
        IF(NSPEC(I+1).LE.ISC)GO TO 172
        ISC=NSPEC(I+1)
        IMX=I
        GO TO 171
 172    IF(NSPEC(I+1).GT.ISC1)GO TO 171
        ISC1=NSPEC(I+1)
        IMIN=I
 171    CONTINUE
        SUM1=SUM1/SUM
        SUMA=SUM/(IG2-IG1+1)
        WRITE(I3,1161)IG1,IG2,SUM1,SUM,SUMA,ISC,IMX
     1  ,ISC1,IMIN
 1161   FORMAT(' BETWEEN CH',I5,'-',I5,/,' CENTROID:',
     1  F9.2,' INTEGRAL:',F10.0,' AVERAGE:',F8.2,/,
     2  ' MAX COUNT:',I6,' IN CH.:',I5,' MIN COUNT:',I6,' IN CH.:'
     3  ,I5)
        GO TO 5

 400    PRINT 401
 401    FORMAT(/,' L-P not available')
        GO TO 5

 402    PRINT 403,FILNAM
 403    FORMAT(/,' File: ',A20,/,' not found')
        FILNAM=FILGML
        GO TO 5

        END       


        SUBROUTINE SPOUT(NUT,JA,JB,FILNAM)
C  SUBROUTINE FOR SPECTRUM LISTING ON UNIT NUT
C  CHANNEL JA TO JB
        COMMON/SPECT/NSPEC(8192),NSIZE
        WRITE(NUT,1000)JA,JB,FILNAM
 1000   FORMAT('1FROM CHANNEL ',I5,' TO CHANNEL ',I5,/,1H ,A20)
        JMIN=JA+1
        JB1=JB+1
 10     JMAX=JMIN+9
        IF(JMAX.GT.NSIZE)JMAX=NSIZE
        IF(JMAX.GT.JB1)JMAX=JB1
        IC=JMIN-1
        WRITE(NUT,1001)IC,(NSPEC(J),J=JMIN,JMAX)
 1001   FORMAT(I5,10I7)
        JMIN=JMIN+10
        IF(JMIN.LE.NSIZE.AND.JMIN.LE.JB1)GO TO 10
        RETURN
        END

        SUBROUTINE PEAKFI(FWHM,DISC,KMAX,IPLOT,IUT,FILNAM)
C  PEAKFIND VERSION FOR DEC-10.20/47/77.F.I.GENERATES
C  PEAK LIST WITH OPTIONAL PRINTERPLOT TO SELECTED
C  DEVICE. CALLED FROM SPECTIO, WITH 8192 CHANNEL
C  SPECTRUM IN COMMON.
      CHARACTER FILNAM*20
      DIMENSION SPEC(8192),F(150),F1(150)
      DIMENSION PKS(200),JMARK(200),SOUTP(110)
      INTEGER SOUTP,BLNK,STAR,EXX,BBC,SPEC,MEN,ZRO,ONE
      DIMENSION XCHA(50),YCHA(50),WG(50),EF(5,5),C(5)
      COMMON/SPECT/NSPEC(8192),NOCH,CE(5),NCAL
      COMMON/PEAK/NOPEAK,PEAKS(400,4)
      BBC=4HBBBB
      BLNK=4H
      STAR=4H****
      IBCH=4HIIII
      EXX=4HXXXX
      MEN=-1
      ZRO=0
      ONE=1
        C0=CE(1)
        C1=CE(2)
        C2=CE(3)
        C3=CE(4)
        C4=CE(5)
C  MAKE THE CORRELATION SHAPE (GAUSSIAN IN THIS VERSION)
C   CON1=2.*SQRT(ALOG(2.)/3.1415926)/0.6667/FWHM
C   CON2=4.*ALOG(2.)/(0.6667*FWHM)**2
      CON1=1.40908546/FWHM
 770  CON2=4.42677*CON1/FWHM
      K=1.25*FWHM+0.5
      NBCKGD=K+K
      IF(NBCKGD.GT.10)NBCKGD=10
      MINST=NBCKGD/4
      IF(MINST.LT.2)MINST=2
C  MINST=SMALLEST NUMBER OF BACKGROUND CHANNELS ON ONE SIDE OF PEAK
      KK=2*K+1
      DO 1 I=1,KK
      F(I)=CON1*EXP(-CON2*(I-K-1)**2)
    1 F1(I)=(1./KK-F(I))**2
      DO 2 I=1,NOCH
    2 SPEC(I)=ZRO
      N0=0
      CENT=0.
      SUMINT=0.
      PKS(1)=0.
      KKK1=KK+1
      KKK2=NOCH-KK
      DO 10 I=KKK1,KKK2
      SUM=0.
      VAR=0.
      IK1=I-K
      IK2=I+K
      SUM2=0.
C  SUM2=CORRELATION FUNCTION
      DO 12 J=IK1,IK2
      TMP=NSPEC(J)
      SUM=SUM+TMP
      JIK1=J-I+K+1
      VAR=VAR+F1(JIK1)*TMP
   12 SUM2=SUM2+F(JIK1)*TMP
      B=0
      IF(VAR.GT.0.01)B=1.6*SQRT(VAR)
      SUM2=SUM2-SUM/KK-B
C  IS CORRELATION SIGNIFICANT
      IF(SUM2.LE.0.)GO TO 725
C  YES,WAS LAST A 0 OR -1
      IF(SPEC(I-1).EQ.ONE)GO TO 720
C  LAST WAS A 0 OR -1,INITIATE STORE OF THIS PEAK
      PEAK=SUM2+B
      IINIT=I
      INX=1
C  INX=ARRAY INDEX FOR PEAK, IINIT  =FIRST CHANNEL, PEAK TO BE MAX CH.
 720  SUM2=SUM2+B
      INX=INX+1
      PKS(INX)=SUM2
      CENT=CENT+(I-1)*SUM2
      SUMINT=SUMINT+SUM2
      SPEC(I)=ONE
      IF(SUM2.GT.PEAK)PEAK=SUM2
      GO TO 10
C  INSIGNIFICANT CORRELATION. WAS LAST A 1
  725 IF(SPEC(I-1).NE.ONE)GO TO 10
C  YES, PEAK IS JUST PASSED
      INX=INX+1
      PKS(INX)=0.
      IFIN=I-1
      N0=N0+1
      PEAKS(N0,1)=CENT/SUMINT
      CENT=0.
      SUMINT=0.
C  FIND WITH OF CORREL.N PEAK
      PEAK=PEAK*0.5
      KL=1
      DO 46 J=2,INX
      GO TO(47,48),KL
   47 IF(PKS(J).LT.PEAK)GO TO 46
      CH11=(J-1)+(PEAK-PKS(J-1))/(PKS(J)-PKS(J-1))
      KL=2
      GO TO 46
   48 IF(PKS(J).GT.PEAK)GO TO 46
      CH22=(J-1)+(PEAK-PKS(J-1))/(PKS(J)-PKS(J-1))
      GO TO 50
   46 CONTINUE
C  STORE THE WITH
   50 PEAKS(N0,2)=CH22-CH11
C  IGNORE ONE-CHANNEL "SPIKES"
        INTPK=PEAKS(N0,2)*100.
        IF(INTPK.NE.100)GO TO 49
        N0=N0-1
        GO TO 10
  49    IF(N0.LT.400)GO TO 11
        IF(IUT.NE.0)WRITE(IUT,650)
  650 FORMAT(18H PEAK ARRAY FILLED)
      GO TO 13
   11 MEXP=(KK+IINIT-IFIN-1)/2.+0.5
      IF(MEXP.LE.0)GO TO 10
C  THE INPUT WITH IS LARGER THAN THE CALCULATED,
C  MAKE FORBIDDEN REGION FOR BACKGRD.
      JJJ1=IINIT-MEXP
      JJJ2=IINIT-1
      DO 21 J=JJJ1,JJJ2
      IF(SPEC(J).NE.ONE)SPEC(J)=MEN
   21 CONTINUE
      JJJ1=IFIN+1
      JJJ2=IFIN+MEXP
      DO 22 J=JJJ1,JJJ2
      IF(SPEC(J).NE.ONE)SPEC(J)=MEN
   22 CONTINUE
   10 CONTINUE
   13 IF(IUT.NE.0)WRITE(IUT,110)FILNAM,(CE(I),I=1,5)
      KSIGF=0
      NOBAC=0
  110 FORMAT('1PEAKFIND RESULTS FOR FILE:',A20,/
     1,' CALIBRATION COEFF.: ',5E12.5)
      IF(IUT.NE.0)WRITE(IUT,108)FWHM,DISC,N0
  108 FORMAT(' FWHM IN SEARCH:',F6.2,' CHANNELS. PEAKS ARE',
     1' NOT LISTED IF AREA ERROR IS >',F4.0,' %',/,
     2' TOTAL NUMBER OF PEAKS FOUND:',I4,' ,PEAKS ACCEPTED:',
     3/,' N0.',4X,'CHANNEL',8X,'ENERGY',12X,'AREA',9X,
     4'FWHM  L H  CHISQ LOWM HIGM')
      IMX=N0
      PEAKS(N0+1,1)=100000.
      MARKR=1
      JMARK(1)=100000
      N0=0
      DO 40 II=1,IMX
      CENT=PEAKS(II,1)
      WITH=PEAKS(II,2)
      IPK=CENT+0.5
      IB=IPK+1
  749 IF(SPEC(IB).EQ.ONE) GO TO 750
      IINIT=IB
      GO TO 751
  750 IB=IB-1
      GO TO 749
  751 IB=IPK
  752 IB=IB+1
      IF(SPEC(IB).EQ.ONE) GO TO 752
      IFIN=IB-1
C  FIND AREA OF THE REAL PEAK
      BCKGD=0.
      MEXP=(KK+IINIT-IFIN-1)/2.+0.5
      IF(MEXP.LT.0)MEXP=0
      JJJ3=IINIT-MEXP
      JJJ4=IFIN+MEXP
      IF(NOBAC.EQ.1)GO TO 73
      JJJ=IINIT-MEXP
      LCASE=1
      LBCGD=0
      DO 51 J=1,NBCKGD
   52 JJ=JJJ-J
      IF(JJ.LE.0)GO TO 40
      IF(SPEC(JJ).NE.ZRO)GO TO 60
      XCHA(J)=JJ
      YCHA(J)=NSPEC(JJ)
      WG(J)=0.5
      IF(YCHA(J).GE.10.)WG(J)=1./YCHA(J)
      LBCGD=LBCGD+1
      GO TO 51
   60 IF(LBCGD.GE.MINST)GO TO 61
      LCASE=2
      JJJ=JJJ-1
      GO TO 52
   51 CONTINUE
   61 JJJ=IFIN+MEXP
      JLOW=JJ-1
      JSTR=LBCGD
      MCASE=1
      MBCGD=0
      DO 54 J=1,NBCKGD
   55 JJ=JJJ+J
      IF(JJ.GE.NOCH)GO TO 40
      IF(SPEC(JJ).NE.ZRO)GO TO 70
      JARR=J+JSTR
      XCHA(JARR)=JJ
      YCHA(JARR)=NSPEC(JJ)
      WG(JARR)=0.5
      IF(YCHA(JARR).GE.10.)WG(JARR)=1./YCHA(JARR)
      MBCGD=MBCGD+1
      GO TO 54
   70 IF(MBCGD.GT.MINST)GO TO 71
      MCASE=2
      JJJ=JJJ+1
      GO TO 55
   54 CONTINUE
   71 NPTS=LBCGD+MBCGD
      JHIG=JJ-1
      DO 72 J=1,NPTS
   72 XCHA(J)=XCHA(J)-JJ
      CALL FITS(XCHA,YCHA,WG,C,EF,KMAX,NPTS,CHI)
   73 ARVAR=0.
      PKVAR=0.
      SUM=0.
C  CHECK DOUBLETS AND THEIR INTEGRATION LIMITS
      NOBAC=0
      IF(II.EQ.1)GO TO 74
      ICDIF=PEAKS(II-1,1)+0.5
C  IS LOW LIMIT FOR PLOT BELOW LAST PEAK
      IF(JLOW.GT.ICDIF)GO TO 74
      ICDIF=(IPK-ICDIF)/2.-0.5
      IDIF2=IPK-JJJ3+1
C  CHECK DISTANCE BETWEEN ADJACENT PEAKS
      IF(ICDIF.GE.IDIF2)GO TO 74
      JJJ3=IPK+1-ICDIF
   74 CONTINUE
      ICDIF=PEAKS(II+1,1)+0.5
      IF(JHIG.LE.ICDIF)GO TO 75
      ICDIF=(ICDIF-IPK)/2.-0.5
      IDIF2=JJJ4-1-IPK
      IF(ICDIF.GE.IDIF2)GO TO 76
      JJJ4=IPK+1+ICDIF
   76 NOBAC=1
   75 CONTINUE
      DO 57 J=JJJ3,JJJ4
      SPC=NSPEC(J)
      BCKGD=0.
      VARBCK=0.
      FAC1=1.
      DO 59 N=1,KMAX
      FAC=FAC1
      DO 58 K1=1,KMAX
      VARBCK=VARBCK+EF(N,K1)*FAC
   58 FAC=FAC*(J-JJ)
      BCKGD=BCKGD+C(N)*FAC1
   59 FAC1=FAC1*(J-JJ)
      VARBCK=VARBCK*CHI
      ARVAR=ARVAR+SPC+VARBCK
      PKVAR=PKVAR+(SPC+VARBCK)*(J-CENT)**2
   57 SUM=SUM+SPC-BCKGD
      PEAR=SQRT(ARVAR)
      IF(SUM.EQ.0.)SUM=1.
      IF(PEAR/SUM.LE.DISC/100.AND.PEAR.GT.0.AND.SUM.GT.0)GO TO 65
      IF(KSIGF.EQ.1)GO TO 398
      GO TO 40
   65 N0=N0+1
      PEPK=SQRT(PKVAR)/SUM
      EN=C0+CENT*(C1+CENT*(C2+CENT*(C3+CENT*C4)))
      PEEN=(C1+2.*CENT*C2)*PEPK
      JJ3=JJJ3-1
      JJ4=JJJ4-1
      JMARK(MARKR)=JJJ3
      JMARK(MARKR+1)=JJJ4
      MARKR=MARKR+2
      JMARK(MARKR)=100000
      KSIGF=1
        PEAKS(N0,1)=CENT
        PEAKS(N0,2)=PEPK
        PEAKS(N0,3)=SUM
        PEAKS(N0,4)=PEAR
      IF(IUT.NE.0)WRITE(IUT,109)N0,CENT,PEPK,EN,PEEN,SUM,PEAR,
     1WITH,CASE,MCASE
     1,CHI,JJ3,JJ4
  109 FORMAT(1H ,I3,1X,F7.2,1H(,F5.2,1H),F9.2,1H(,F5.2,1H),F8.1,
     11H(,F6.1,1H),2X,F6.2,2I2,F7.1,2I5)
  398 IF(IPLOT.NE.1)GO TO 416
      IF(NOBAC.EQ.1)GO TO 417
C  PLOT THIS PEAK AND THE BACKGROUND AREA
  406 ITOT=0
      KSIGF=0
      JFIRST=LBCGD/2
      DO 399 I=1,JFIRST
      FAC=XCHA(I)
      JLAST=LBCGD+1-I
      XCHA(I)=XCHA(JLAST)
  399 XCHA(JLAST)=FAC
      JFIRST=JLOW+1
      JLAST=JHIG+1
      MAXCHA=NSPEC(JFIRST)
      MINS=MAXCHA
      DO 405 J=JFIRST,JLAST
      IF(MAXCHA.LT.NSPEC(J))MAXCHA=NSPEC(J)
      IF(MINS.GT.NSPEC(J))MINS=NSPEC(J)
  405 CONTINUE
      NOBAC=0
C  GET HIGH TICK.GE.MAXCHA,I.E.=100,200,500,1000 ETC.
      MSCALE=100
      ITEST=200
  400 IF(MAXCHA.LT.MSCALE)GO TO 402
      FACT=2.
      IF(MSCALE.NE.ITEST)GO TO 401
      ITEST=ITEST*10
      FACT=2.5
  401 MSCALE=MSCALE*FACT+0.5
      GO TO 400
  402 IF(MINS.LT.200)MINS=0
      LSCALE=(MINS/200)*200
      MISCA=LSCALE+(MSCALE-LSCALE)/2
      IF(IUT.NE.0)WRITE(IUT,450)LSCALE,MISCA,MSCALE
  450 FORMAT(30X,I6,45X,I6,43X,I6/36H CHANN  ENERGY COUNT BCKG INTGR....
     2I,
     149(1H.),1HI,49(1H.),1HI)
      IXIND=1
      MARKR=1
      DO 415 J=JFIRST,JLAST
      JPRT=J-1
      ICNT=NSPEC(J)
      EN=C0+JPRT*(C1+JPRT*(C2+JPRT*(C3+JPRT*C4)))+0.005
      FAC=1.
      BCKGD=0.
      DO 407 N=1,KMAX
      BCKGD=BCKGD+C(N)*FAC
  407 FAC=FAC*(J-JJ)
      IBCKGD=BCKGD+0.5
      ITOT=ITOT+ICNT-IBCKGD
      FAC1=100./(MSCALE-LSCALE)
      FAC=(ICNT-LSCALE)*FAC1+5.5
      JSTR=FAC
      IF(JSTR.LT.1)JSTR=1
      IF(JSTR.GT.105)JSTR=105
C  ZERO THE OUTPUT ARRAY
      DO 408 I=1,105
  408 SOUTP(I)=BLNK
      SOUTP(JSTR)=STAR
      ISTR=(IBCKGD-LSCALE)*FAC1+5.5
      IF(ISTR.LT.1)ISTR=1
      IF(ISTR.GT.105)ISTR=105
      SOUTP(ISTR)=IBCH
      IJ=XCHA(IXIND)+JJ+0.5
      IF(J.NE.IJ)GO TO 409
      IXIND=IXIND+1
      SOUTP(ISTR)=BBC
  409 IF(J.EQ.JMARK(MARKR))GO TO 410
      GO TO 412
  410 IADD=1
      IF(JSTR.GE.90)IADD=-1
      ISTR=JSTR
      MARKR=MARKR+1
      DO 411 I=1,5
      ISTR=ISTR+IADD
  411 SOUTP(ISTR)=EXX
  412 IF(IUT.NE.0)
     1WRITE(IUT,451)JPRT,EN,ICNT,IBCKGD,ITOT,(SOUTP(I),I=1,
     2105)
  451 FORMAT(1H ,I5,F8.2,I6,I5,I6,105A1)
  415 CONTINUE
      JMARK(1)=100000
        IF(IUT.NE.0)WRITE(IUT,108)
  416 MARKR=1
  417 CONTINUE
   40 CONTINUE
        NOPEAK=N0
        RETURN
      END

       SUBROUTINE FITS(X,Y,W,C,E,KMAX,NPTS,CHI)
C  GENERAL SUBROUTINE FOR POLYNOMIAL FIT
C  ENTER WITH X AND Y VALUES, WEIGHT, NO. OF WANTED PARAMETERS
C  IN KMAX, AND NO. OF POINTS (.LE.50) IN NPTS.  RETURNS WITH COVAR
C  MATRIX IN EF,PARAMETERS IN C AND NORMALLIZED CHISQUARED IN CHI
      DIMENSION X(50),Y(50),W(50),C(5),EF(5,5),E(5,5),RS(5)
      SUM1=0.
      DO 2 K=1,KMAX
      DO 1 K1=1,KMAX
    1 E(K,K1)=0.
    2 RS(K)=0.
      DO 5 J=1,NPTS
      FAC1=W(J)
      DO 4 K=1,KMAX
      FAC=FAC1
      DO 3 K1=1,KMAX
      E(K,K1)=E(K,K1)+FAC
    3 FAC=FAC*X(J)
      RS(K)=RS(K)+FAC1*Y(J)
    4 FAC1=FAC1*X(J)
    5 SUM1=SUM1+W(J)*Y(J)*Y(J)
      DO 6 K=1,KMAX
      DO 6 K1=1,K
      EF(K,K1)=E(K,K1)
    6 EF(K1,K)=EF(K,K1)
      CALL MATINV(E,KMAX)
      SUM2=0.
      DO 8 K=1,KMAX
      SUM=0.
      DO 7 K1=1,KMAX
    7 SUM=SUM+E(K,K1)*RS(K1)
      C(K)=SUM
    8 SUM2=SUM*RS(K)+SUM2
      SUM3=0.
      DO 9 K=1,KMAX
      DO 9 K1=1,KMAX
    9 SUM3=SUM3+C(K)*C(K1)*EF(K,K1)
      NDIV=NPTS-KMAX
      IF(NDIV.LE.0)NDIV=1
      CHI=(SUM1-2.*SUM2+SUM3)/NDIV
      RETURN
      END

       SUBROUTINE MATINV(A,N)
C  MATRIX INVERSION BY GAUSS-JORDAN ELIMINATION
      DIMENSION A(5,5),B(5),C(5),LZ(5)
      DO 10 J=1,N
   10 LZ(J)=J
      DO 20 I=1,N
      K=I
      Y=A(I,I)
      L=I-1
      LP=I+1
      IF(N-LP)14,11,11
   11 DO 13 J=LP,N
      W=A(I,J)
      IF(ABS(W)-ABS(Y))13,13,12
   12 K=J
      Y=W
   13 CONTINUE
   14 DO 15 J=1,N
      C(J)=A(J,K)
      A(J,K)=A(J,I)
      A(J,I)=-C(J)/Y
      A(I,J)=A(I,J)/Y
   15 B(J)=A(I,J)
      A(I,I)=1./Y
      J=LZ(I)
      LZ(I)=LZ(K)
      LZ(K)=J
      DO 19 K=1,N
      IF(I-K)16,19,16
   16 DO 18 J=1,N
      IF(I-J)17,18,17
   17 A(K,J)=A(K,J)-B(J)*C(K)
   18 CONTINUE
   19 CONTINUE
   20 CONTINUE
      DO 200 I=1,N
      IF(I-LZ(I))100,200,100
  100 K=I+1
      DO 500 J=K,N
      IF(I-LZ(J))500,600,500
  600 M=LZ(I)
      LZ(I)=LZ(J)
      LZ(J)=M
      DO 700 L=1,N
      C(L)=A(I,L)
      A(I,L)=A(J,L)
  700 A(J,L)=C(L)
  500 CONTINUE
  200 CONTINUE
      RETURN
      END

       SUBROUTINE MININO(DEVICE,IOUTP,EFIL,F,SMX,IA,A,NCMAX)

C      3.16.1982 F.INGEBRETSEN
C      "MINI-NORDIC" FORMAT INPUT PROGRAM. ASSUMES DATA
C      WRITTEN IN <100CHAR/ LINES, AND CR/LF BETWEEN CHANNELS.
C      READS DATA UP TO MAX. SPECTRUM ARRAY SIZE ANYWAY IF
C      INPUT SPECTRUM IS TOO LONG. ACCEPTS ALSO 2-DIM. FROM
C      CHANNEL 0,0 AND UP TO MAX ARRAY SIZE.

C      FORMAL PARAMETERS IN CALL ARE:
C         DEVICE   = INPUT MEDIUM DEVICE NUMBER
C         IOUTP    = LIST DEVICE (ERROR MESSAGES ETC.)
C         EFIL     = FILE NUMBER WANTED AT CALL. RETURNS WITH
C                    FILE NUMBER FOUND IN !FILE - KEYWORD
C         F        = SPECTRUM ARRAY
C         SMX      = LENGTH OF SPECTRUM ARRAY.
C      ****** VERSION WITH FLOATING SPECTRUM ******
       INTEGER DEVICE
       DIMENSION F(1),A(1)
       CHARACTER KENW*4,KEYW(5)*4,IBUF*100,CHA*1
       DATA KEYW/'!FIL','!DIM','!CHA','!IDE','!CAL'/
       DATA IKEYW/5/

C      BUFFER 'CLEAR' AND READ FROM UNIT 'DEVICE' (ONE LINE)
       IRETSW=0
    1  DO 4 I =1,100
    4  IBUF(I:I)=' '
       READ(DEVICE,500,END=800)IBUF
  500  FORMAT(A100)
       IF(IBUF(1:1).EQ.'!')GOTO 15

C      NOT A KEYWORD LINE,DATA ITEM ASSUMED.
C      PICK UP NUMBERS FROM IBUF:
       I=1
   11  CALL GETNUM(I,SIF,ISIF,CHA,IBUF)
       IF(CHA.NE.',')GOTO 1
       F(NCHAN)=SIF
       NCHAN=NCHAN+1
       IF(NCHAN.GT.NCMAX)RETURN
       IF(I.LT.100)GOTO 11

C      KEYWORD DECODE AND PARAMETER PICKUP:
   15  WRITE(IOUTP,555)IBUF
  555  FORMAT(' ',A70)

C      CHECK FIRST 4 CHARACTERS,DEFINES KEYWORD :
       DO 20 J=1,IKEYW
       IF(IBUF(1:4).EQ.KEYW(J))GOTO 30
   20  CONTINUE

C      IGNORED KEYWORDS IN THIS PROGRAM:
       GOTO 1
C      FIND '=' IN KEYWORD LINE:
C      ASSUMES THAT '=' IS PRESENT BEFORE 25'TH CHARACTER.
   30  DO 31 K=5,25
       IF(IBUF(K:K).EQ.'=')GOTO 32
   31  CONTINUE
       WRITE(IOUTP,777)
  777  FORMAT(' ***** Warning , "=" is not found in keyword ')
       GOTO 1
   32  K=K+1

C      K POINTS AT FIRST PARAMETER CHARACTER. JUMP TO IDENTIFIED KEYW:
       GOTO( 40, 50, 60, 70, 80),J
C      GOTO(FIL,DIM,CHA,IDE,CAL),J

C      !FILE KEYWORD:
   40  CALL GETNUM(K,FIL,ISIF,CHA,IBUF)
       IF(FIL.NE.EFIL)WRITE(IOUTP,101)FIL,EFIL
  101  FORMAT(' FILE NUMBER ',F5.0,' READ, ',F5.0,'EXPECTED')
       EFIL=FIL
       GOTO 1

C      !DIMENSION KEYWORD INPUT:
   50  CALL GETNUM(K,SIZE,ISIF,CHA,IBUF)
       IF(SIZE.EQ.1.)GOTO 51
       WRITE(IOUTP,102)SIZE
  102  FORMAT(' ***** Warning, spectrum dimension is ',F3.0)
   51  CALL GETNUM(K,FCH,ISIF,CHA,IBUF)
       CALL GETNUM(K,SCH,ISIF,CHA,IBUF)

C      PICK UP 2-DIM DIMENSIONS IF PRESENT:
       IF(SIZE.EQ.1.)GOTO 59
       K=K+1
       CALL GETNUM(K,FCH2,ISIF,CHA,IBUF)
       CALL GETNUM(K,SCH2,ISIF,CHA,IBUF)
       SCH=(SCH-FCH+1.)*(SCH2-FCH2+1.)-1.
   59  IF(SCH+1..LE.SMX)GOTO 1

C      TOO LARGE SPECTRUM INTO ARRAY F:
       WRITE(IOUTP,103)SCH,SMX
103    FORMAT(' SPECTRUM SIZE ',F5.0,' IS LARGER THAN ',F5.0,/,
     $' HIGHER CHANNELS ARE IGNORED AT INPUT')
       GOTO 1

C      !CHANNEL KEYWORD
   60  K=K+1
       CALL GETNUM(K,CH1,ISIF,CHA,IBUF)
       NCHAN=CH1+1.1
       CALL GETNUM(K,CH2,ISIF,CHA,IBUF)
       IF(SIZE.EQ.2.)CH2=SCH
       NCMAX=CH2+1.1
       IF(CH2.GT.SMX)NCMAX=SMX+0.1
       GOTO 1

C      !IDEND KEYWORD:
   70  READ(5,500,END=800)IBUF
       GOTO 70
  800  RETURN

C      !CALIBRATION KEYWORD:
   80  CALL GETNUM(K,DEGR,ISIF,CHA,IBUF)
       IA=DEGR+0.1
       DO 81 I=1,IA+1
   81  CALL GETFLO(K,A(I),IBUF)
       GOTO 1
       END

        SUBROUTINE GETNUM(I,SIF,ISIF,CHA,IBUF)
C      SUBROUTINE FOR PICKING NUMBER FROM CHARACTER ARRAY IBUF
C      I=FIRST CHARACTER,SIF=NUMBER (RETURNS AS FLOATING VALUE)
C      CHA=TERMINATING CHARACTER. IGNORES UP TO 5 NON-SIGNIFICANT
C      SPACES. AT EXIT, I POINTS AT CHARACTER FOLLOWING TERMINATOR!!

       CHARACTER CHA*1,IBUF*100
       SIF=0.
       ISIF=0
       FMUL=1.
       IGNORE=0
       NIGNOR=0
    1  CHA=IBUF(I:I)
       I=I+1
       IF(CHA.LT.'0'.OR.CHA.GT.'9')GOTO 10

C      CHARACTER IS A DIGIT, ACCUMULATE IT:
       READ(CHA,199)J
  199  FORMAT(I1)
       IGNORE=1
       SIF=SIF*10.+J
       ISIF=ISIF+1
       GOTO 1

C      NO-DIGIT, CHECK FOR '-' ,'+' AND SPACE:
   10  IF(CHA.NE.'-')GOTO 11
       FMUL=-1.
       GOTO 1
   11  IF(CHA.EQ.'+')GOTO 1
       IF(CHA.NE.' ')GOTO 15
C      ACCEPT UP TO 7 NON-SIGNIFICANT SPACES
       IF(IGNORE.NE.0)GOTO 15
       NIGNOR=NIGNOR+1
       IF(NIGNOR.LE.7)GOTO 1
   15  SIF=SIF*FMUL
       RETURN
       END

       SUBROUTINE GETFLO(K,A0,IBUF)

C      PICK FLOATING FREE FORMAT NUMBER FROM INPUTSTRING:

       CHARACTER IBUF*100,CHA*1
       F2=0.
       F4=0.

C      TAKE SPECIAL CARE OF -.XXX... - FORMAT:
       FMUL=1.
       CALL GETNUM(K,F1,ISIF,CHA,IBUF)
       IF(F1.EQ.0..AND.IBUF(K-2-ISIF:K-2-ISIF).EQ.'-')FMUL=-1.

       IF(CHA.EQ.'.')THEN
C      GET FRACTION:
         CALL GETNUM(K,F2,ISIF,CHA,IBUF)
         IF(ISIF.GT.0)F2=F2/10.**ISIF
       ENDIF
       IF(F1.LT.0.)F2=-F2
       IF(CHA.EQ.'E')CALL GETNUM(K,F4,ISIF,CHA,IBUF)
       I1=F4
       A0=FMUL*(F1+F2)*10.**I1

       RETURN
       END
